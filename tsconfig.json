{
  "compilerOptions": {
    /* Basic Options */
    "target": "es5",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "commonjs",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "lib": [ "dom", "es2015" ],               /* Specify library files to be included in the compilation. */
    "allowJs": true,                          /* Allow javascript files to be compiled. */
    // "checkJs": true,                       /* Report errors in .js files. */
    "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    // "declaration": true,                   /* Generates corresponding '.d.ts' file. */
    // "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
    // "sourceMap": true,                     /* Generates corresponding '.map' file. */
    // "outFile": "./",                       /* Concatenate and emit output to single file. */
    // "outDir": "./",                        /* Redirect output structure to the directory. */
    // "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    // "composite": true,                     /* Enable project compilation */
    // "removeComments": true,                /* Do not emit comments to output. */
    "noEmit": true,                           /* Do not emit outputs. */
    // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */
    // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,              /* Enable strict null checks. */
    // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
    // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */
    // "noUnusedLocals": true,                /* Report errors on unused locals. */
    // "noUnusedParameters": true,            /* Report errors on unused parameters. */
    // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */

    /* Module Resolution Options */
    // "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [                         /* List of folders to include type definitions from. */
    //   "node_modules/@types",
    //   "packages/core/types"
    // ],
    // "types": []                                /* Type declaration files to be included in compilation. */
    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */

    /* Source Map Options */
    // "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "./",                       /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
  },
  "include": [
    "packages/core",
    "packages/delivery-node",
    "packages/delivery-react-native",
    "packages/delivery-x-domain-request",
    "packages/delivery-xml-http-request",
    "packages/in-flight",
    "packages/plugin-app-duration",
    "packages/plugin-aws-lambda",
    "packages/plugin-browser-context",
    "packages/plugin-browser-device",
    "packages/plugin-contextualize",
    "packages/plugin-navigation-breadcrumbs",
    "packages/plugin-network-breadcrumbs",
    "packages/plugin-react-native-app-state-breadcrumbs",
    "packages/plugin-react-native-connectivity-breadcrumbs",
    "packages/plugin-react-native-orientation-breadcrumbs",
    "packages/plugin-react-native-unhandled-rejection",
    "packages/plugin-react-native-hermes",
    "packages/plugin-react-native-client-sync",
    "packages/plugin-react-native-event-sync",
    "packages/plugin-react-native-global-error-handler",
    "packages/plugin-react-native-session",
    "packages/plugin-server-session",
    "packages/plugin-react",
    "packages/plugin-vue",
    "packages/plugin-express",
    "packages/plugin-koa",
    "packages/plugin-restify",
    "packages/node",
    "packages/react-native",
    "packages/plugin-client-ip",
    "packages/plugin-window-unhandled-rejection",
    "packages/plugin-window-onerror",
    "packages/plugin-strip-query-string",
    "packages/plugin-strip-project-root",
    "packages/plugin-interaction-breadcrumbs",
    "packages/plugin-browser-request",
    "packages/plugin-simple-throttle",
    "packages/plugin-intercept",
    "packages/plugin-node-unhandled-rejection",
    "packages/plugin-node-in-project",
    "packages/plugin-node-device",
    "packages/plugin-node-surrounding-code",
    "packages/plugin-node-uncaught-exception",
    "packages/plugin-console-breadcrumbs",
    "packages/plugin-browser-session",
    "packages/browser"
  ],
  "exclude": [
    "packages/react-native/src/NativeBugsnag.ts"
  ]
}
