{"version":3,"sources":["node_modules/browser-pack-flat/_prelude","node_modules/@bugsnag/cuid/index.js","browser/plugins/interaction-breadcrumbs.js","browser/plugins/network-breadcrumbs.js","node_modules/fast-safe-stringify/index.js","base/lib/es-utils.js","base/breadcrumb.js","base/lib/positive-int-check.js","base/config.js","base/lib/infer-release-stage.js","base/lib/has-stack.js","node_modules/stackframe/stackframe.js","node_modules/error-stack-parser/error-stack-parser.js","node_modules/stack-generator/stack-generator.js","base/report.js","node_modules/@bugsnag/cuid/lib/pad.js","node_modules/@bugsnag/cuid/lib/fingerprint.browser.js","base/session.js","node_modules/iserror/index.js","base/client.js","base/plugins/throttle.js","browser/config.js","browser/plugins/console-breadcrumbs.js","browser/plugins/context.js","browser/plugins/device.js","browser/plugins/inline-script-content.js","browser/plugins/ip.js","browser/plugins/navigation-breadcrumbs.js","browser/plugins/request.js","browser/plugins/sessions.js","browser/plugins/strip-query-string.js","browser/plugins/unhandled-rejection.js","browser/plugins/window-onerror.js","browser/transports/lib/payload.js","browser/transports/x-domain-request.js","browser/transports/xml-http-request.js","browser/index.js","node_modules/browser-pack-flat/_postlude"],"names":["f","exports","module","define","amd","window","global","self","this","bugsnag","randomBlock","_$pad_31","Math","random","discreteValues","toString","base","blockSize","safeCounter","c","cuid","Date","getTime","_$fingerprint_30","getNodeSelector","el","parts","tagName","id","push","className","length","split","join","document","querySelectorAll","Array","prototype","indexOf","e","parentNode","childNodes","index","call","truncate","value","slice","monkeyPatchXMLHttpRequest","XMLHttpRequest","nativeOpen","open","method","url","requestUrlKey","requestMethodKey","requestSetupKey","removeEventListener","handleXHRLoad","handleXHRError","addEventListener","apply","arguments","restoreFunctions","client","notifier","metaData","status","request","leaveBreadcrumb","breadcrumbType","monkeyPatchFetch","oldFetch","fetch","_len","args","_key","options","Promise","resolve","reject","undefined","then","response","handleFetchSuccess","error","handleFetchError","stringify","obj","decirc","JSON","Circle","val","k","parent","count","stack","toJSON","forceDecirc","i","key","Object","hasOwnProperty","pop","reduce","arr","fn","accum","len","_hasDontEnumBug","propertyIsEnumerable","_dontEnums","_pad","n","_$esUtils_4","map","item","concat","filter","includes","x","keys","result","prop","isArray","isoDate","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","__isoDate_1","BugsnagBreadcrumb","name","type","timestamp","_classCallCheck","_$BugsnagBreadcrumb_1","__includes_7","_$positiveIntCheck_7","parseInt","__filter_3","__reduce_3","__keys_3","__isArray_3","_$config_3","schema","apiKey","defaultValue","message","validate","appVersion","autoNotify","beforeSend","endpoint","sessionEndpoint","autoCaptureSessions","notifyReleaseStages","releaseStage","maxBreadcrumbs","autoBreadcrumbs","user","mergeDefaults","opts","Error","errors","valid","_$inferReleaseStage_6","app","config","_$hasStack_5","err","stacktrace","root","factory","_$stackframe_36","StackFrame","_isNumber","isNaN","parseFloat","isFinite","_capitalize","str","charAt","toUpperCase","substring","_getter","p","props","booleanProps","numericProps","stringProps","arrayProps","getArgs","setArgs","v","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","getFunctionName","getFileName","getLineNumber","getColumnNumber","Boolean","j","Number","String","_$errorStackParser_32","ErrorStackParser","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","parse","parseOpera","match","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","exec","replace","line","tokens","locationParts","functionName","fileName","lineNumber","columnNumber","source","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","argsRaw","functionCall","shift","_$stackGenerator_35","StackGenerator","backtrace","maxStackSize","curr","callee","test","RegExp","$1","caller","__reduce_9","__filter_9","BugsnagReport","errorClass","errorMessage","handledState","defaultHandledState","___classCallCheck_9","__isBugsnagReport","_ignored","_handledState","breadcrumbs","context","device","stringOrFallback","groupingHash","severity","frame","formatStackframe","session","ignore","isIgnored","updateMetaData","section","_updates","updates","removeMetaData","_extends","property","payloadVersion","exceptions","unhandled","severityReason","file","normaliseFunctionName","code","inProject","fallback","getStacktrace","errorFramesToSkip","generatedFramesToSkip","ensureReport","reportOrError","_$BugsnagReport_9","num","size","s","substr","env","globalCount","mimeTypesLength","navigator","mimeTypes","clientId","userAgent","pow","fingerprint","_$cuid_29","__isoDate_10","Session","___classCallCheck_10","startedAt","_handled","_unhandled","events","handled","trackError","report","_$Session_10","_$isError_34","__map_2","__reduce_2","__includes_2","__isArray_2","noop","BugsnagClient","configSchema","___classCallCheck_2","version","_configured","_transport","sendSession","sendReport","_logger","debug","info","warn","plugins","beforeSession","BugsnagSession","configure","___extends_2","validity","use","plugin","init","transport","t","logger","l","sid","sessionDelegate","_sessionDelegate","startSession","crumb","notify","_normaliseError","normaliseError","_opts","originalSeverity","notifyArgs","hasNecessaryFields","_$BugsnagClient_2","_$throttle_8","maxEvents","refresh","_$config_11","location","host","collectUserIp","__map_13","__reduce_13","_$consoleBreadcrumbs_13","CONSOLE_LOG_METHODS","original","console","arg","stringified","_restore","destroy","forEach","consoleBreadcrumbsEnabled","__filter_13","_$context_14","unshift","pathname","__isoDate_15","_$device_15","___extends_15","time","locale","browserLanguage","systemLanguage","userLanguage","language","__reduce_16","scriptStartRe","scriptEndRe","extractScriptContent","_$inlineScriptContent_16","html","DOMContentLoaded","getHtml","documentElement","outerHTML","originalLocation","href","onreadystatechange","readyState","htmlLines","_extractScriptContent","script","start","abs","content","startLine","end","_$interactionBreadcrumbs_17","event","targetText","targetSelector","getNodeText","target","interactionBreadcrumbsEnabled","text","textContent","innerText","_$ip_18","___extends_18","clientIp","_$navigationBreadcrumbs_19","drop","oldURL","from","relativeLocation","to","newURL","state","history","replaceState","wrapHistoryFn","pushState","navigationBreadcrumbsEnabled","a","createElement","search","hash","stateChangeToMetaData","title","currentPath","prevState","orig","_$networkBreadcrumbs_20","_client","restore","networkBreadcrumbsEnabled","_$request_21","___extends_21","__map_22","__isArray_22","__includes_22","_$sessions_22","sessionClient","___extends_22","sessions","__map_23","strip","_$stripQueryString_23","___extends_23","_strip","__reduce_24","_listener","_$unhandledRejection_24","listener","reason","isBluebird","detail","fixBluebirdStacktrace","serializableReason","onunhandledrejection","promise","_ref","_$windowOnerror_25","prevOnError","onerror","messageOrEvent","lineNo","charNo","decorateStack","culprit","setFileName","setLineNumber","setColumnNumber","errorCharacter","_$stringify_33","_$payload_26","payload","__isoDate_27","matchPageProtocol","_$xDomainRequest_27","cb","protocol","encodeURIComponent","req","XDomainRequest","onload","responseText","setTimeout","send","_matchPageProtocol","pageProtocol","__isoDate_28","_$xmlHttpRequest_28","DONE","setRequestHeader","__map_12","__reduce_12","___extends_12","transports","_$browser_12","userPlugins","sessionTrackingEnabled","finalSchema","getPrefixedConsole","inferBreadcrumbSetting","consoleLog","consoleMethod","bind","defaultInDev","Bugsnag","Client","Report","Breadcrumb"],"mappings":"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","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.bugsnag = f()}})(function(){var define,module,exports;\n","/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\nvar fingerprint = require('./lib/fingerprint.js');\nvar pad = require('./lib/pad.js');\n\nvar c = 0,\n  blockSize = 4,\n  base = 36,\n  discreteValues = Math.pow(base, blockSize);\n\nfunction randomBlock () {\n  return pad((Math.random() *\n    discreteValues << 0)\n    .toString(base), blockSize);\n}\n\nfunction safeCounter () {\n  c = c < discreteValues ? c : 0;\n  c++; // this is not subliminal\n  return c - 1;\n}\n\nfunction cuid () {\n  // Starting with a lowercase letter makes\n  // it HTML element ID friendly.\n  var letter = 'c', // hard-coded allows for sequential access\n\n    // timestamp\n    // warning: this exposes the exact date and time\n    // that the uid was created.\n    timestamp = (new Date().getTime()).toString(base),\n\n    // Prevent same-machine collisions.\n    counter = pad(safeCounter().toString(base), blockSize),\n\n    // A few chars to generate distinct ids for different\n    // clients (so different computers are far less\n    // likely to generate the same id)\n    print = fingerprint(),\n\n    // Grab some more chars from Math.random()\n    random = randomBlock() + randomBlock();\n\n  return letter + timestamp + counter + print + random;\n}\n\ncuid.fingerprint = fingerprint;\n\nmodule.exports = cuid;\n","/*\n * Leaves breadcrumbs when the user interacts with the DOM\n */\nmodule.exports = {\n  init: (client) => {\n    if (!('addEventListener' in window)) return\n\n    window.addEventListener('click', (event) => {\n      let targetText, targetSelector\n      try {\n        targetText = getNodeText(event.target)\n        targetSelector = getNodeSelector(event.target)\n      } catch (e) {\n        targetText = '[hidden]'\n        targetSelector = '[hidden]'\n        client._logger.error('Cross domain error when tracking click event. See https://docs.bugsnag.com/platforms/browsers/faq/#3-cross-origin-script-errors')\n      }\n      client.leaveBreadcrumb('UI click', { targetText, targetSelector }, 'user')\n    }, true)\n  },\n  configSchema: {\n    interactionBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: '(boolean) interactionBreadcrumbsEnabled should be true or false'\n    }\n  }\n}\n\n// extract text content from a element\nconst getNodeText = el => {\n  let text = el.textContent || el.innerText || ''\n  if (!text && (el.type === 'submit' || el.type === 'button')) text = el.value\n  text = text.replace(/^\\s+|\\s+$/g, '') // trim whitespace\n  return truncate(text, 140)\n}\n\n// Create a label from tagname, id and css class of the element\nfunction getNodeSelector (el) {\n  const parts = [ el.tagName ]\n  if (el.id) parts.push('#' + el.id)\n  if (el.className && el.className.length) parts.push(`.${el.className.split(' ').join('.')}`)\n  // Can't get much more advanced with the current browser\n  if (!document.querySelectorAll || !Array.prototype.indexOf) return parts.join('')\n  try {\n    if (document.querySelectorAll(parts.join('')).length === 1) return parts.join('')\n  } catch (e) {\n    // Sometimes the query selector can be invalid just return it as-is\n    return parts.join('')\n  }\n  // try to get a more specific selector if this one matches more than one element\n  if (el.parentNode.childNodes.length > 1) {\n    const index = Array.prototype.indexOf.call(el.parentNode.childNodes, el) + 1\n    parts.push(`:nth-child(${index})`)\n  }\n  if (document.querySelectorAll(parts.join('')).length === 1) return parts.join('')\n  // try prepending the parent node selector\n  if (el.parentNode) return `${getNodeSelector(el.parentNode)} > ${parts.join('')}`\n  return parts.join('')\n}\n\nfunction truncate (value, length) {\n  const ommision = '(...)'\n  if (value && value.length <= length) return value\n  return value.slice(0, length - ommision.length) + ommision\n}\n","/* global XMLHttpRequest */\nconst breadcrumbType = 'network'\nlet restoreFunctions = []\nlet client\n\n/*\n * Leaves breadcrumbs when network requests occur\n */\nmodule.exports = {\n  init: (_client) => {\n    client = _client\n    monkeyPatchXMLHttpRequest()\n    monkeyPatchFetch()\n  },\n  destroy: () => {\n    restoreFunctions.forEach(restore => restore())\n    restoreFunctions = []\n  },\n  configSchema: {\n    networkBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: '(boolean) networkBreadcrumbsEnabled should be true or false'\n    }\n  }\n}\n\n// ------------------------------------------------------------------------------------------------\n// XMLHttpRequest and XDomainRequest monkey patch\n// ------------------------------------------------------------------------------------------------\n// create keys to safely store metadata on the request object\nconst requestSetupKey = 'BUGSNAG:SETUP'\nconst requestUrlKey = 'BUGSNAG:REQUEST_URL'\nconst requestMethodKey = 'BUGSNAG:REQUEST_METHOD'\n\n// generic function for monkey patching both XMLHttpRequest and XDomainRequest\nfunction monkeyPatchXMLHttpRequest () {\n  if (!('addEventListener' in XMLHttpRequest.prototype)) return\n  let nativeOpen = XMLHttpRequest.prototype.open\n\n  // override native open()\n  XMLHttpRequest.prototype.open = function open (method, url) {\n    // store url and HTTP method for later\n    this[requestUrlKey] = url\n    this[requestMethodKey] = method\n\n    // if we have already setup listeners, it means open() was called twice, we need to remove\n    // the listeners and recreate them\n    if (this[requestSetupKey]) {\n      this.removeEventListener('load', handleXHRLoad)\n      this.removeEventListener('error', handleXHRError)\n    }\n\n    // attach load event listener\n    this.addEventListener('load', handleXHRLoad)\n    // attach error event listener\n    this.addEventListener('error', handleXHRError)\n\n    this[requestSetupKey] = true\n\n    nativeOpen.apply(this, arguments)\n  }\n\n  restoreFunctions.push(() => {\n    XMLHttpRequest.prototype.open = nativeOpen\n  })\n}\n\nfunction handleXHRLoad () {\n  if (this[requestUrlKey] === client.notifier.url) {\n    // don't leave a network breadcrumb from bugsnag notify calls\n    return\n  }\n  let metaData = {\n    status: this.status,\n    request: `${this[requestMethodKey]} ${this[requestUrlKey]}`\n  }\n  if (this.status >= 400) {\n    // contacted server but got an error response\n    client.leaveBreadcrumb('XMLHttpRequest failed', metaData, breadcrumbType)\n  } else {\n    client.leaveBreadcrumb('XMLHttpRequest succeeded', metaData, breadcrumbType)\n  }\n}\n\nfunction handleXHRError () {\n  if (this[requestUrlKey] === client.notifier.url) {\n    // don't leave a network breadcrumb from bugsnag notify calls\n    return\n  }\n  // failed to contact server\n  client.leaveBreadcrumb('XMLHttpRequest error', {\n    request: `${this[requestMethodKey]} ${this[requestUrlKey]}`\n  }, breadcrumbType)\n}\n\n// ------------------------------------------------------------------------------------------------\n// window.fetch monkey patch\n// ------------------------------------------------------------------------------------------------\nfunction monkeyPatchFetch () {\n  if (!('fetch' in window)) return\n\n  let oldFetch = window.fetch\n  window.fetch = function fetch (...args) {\n    let [url, options] = args\n    let method = 'GET'\n    if (options && options.method) {\n      method = options.method\n    }\n    return new Promise((resolve, reject) => {\n      // pass through to native fetch\n      oldFetch(...args)\n        .then(response => {\n          handleFetchSuccess(response, method, url)\n          resolve(response)\n        })\n        .catch(error => {\n          handleFetchError(method, url)\n          reject(error)\n        })\n    })\n  }\n\n  restoreFunctions.push(() => {\n    window.fetch = oldFetch\n  })\n}\n\nfunction handleFetchSuccess (response, method, url) {\n  let metaData = {\n    status: response.status,\n    request: `${method} ${url}`\n  }\n  if (response.status >= 400) {\n    // when the request comes back with a 4xx or 5xx status it does not reject the fetch promise,\n    client.leaveBreadcrumb('fetch() failed', metaData, breadcrumbType)\n  } else {\n    client.leaveBreadcrumb('fetch() succeeded', metaData, breadcrumbType)\n  }\n}\n\nfunction handleFetchError (method, url) {\n  client.leaveBreadcrumb('fetch() error', { request: `${method} ${url}` }, breadcrumbType)\n}\n","module.exports = stringify\nstringify.default = stringify\nfunction stringify (obj) {\n  decirc(obj, '', [], null)\n  return JSON.stringify(obj)\n}\nfunction Circle (val, k, parent) {\n  this.val = val\n  this.k = k\n  this.parent = parent\n  this.count = 1\n}\nCircle.prototype.toJSON = function toJSON () {\n  if (--this.count === 0) {\n    this.parent[this.k] = this.val\n  }\n  return '[Circular]'\n}\nfunction decirc (val, k, stack, parent) {\n  if (typeof val === 'object' && val !== null) {\n    if (typeof val.toJSON === 'function') {\n      if (val instanceof Circle) {\n        val.count++\n        return\n      }\n      if (val.toJSON.forceDecirc === undefined) {\n        return\n      }\n    }\n    for (var i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        parent[k] = new Circle(val, k, parent)\n        return\n      }\n    }\n    stack.push(val)\n    for (var key in val) {\n      if (Object.prototype.hasOwnProperty.call(val, key)) {\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n","// minimal implementations of useful ES functionality\n\n// all we really need for arrays is reduce – everything else is just sugar!\n\n// Array#reduce\nconst reduce = (arr, fn, accum) => {\n  let val = accum\n  for (let i = 0, len = arr.length; i < len; i++) val = fn(val, arr[i], i, arr)\n  return val\n}\n\n// Array#filter\nconst filter = (arr, fn) =>\n  reduce(arr, (accum, item, i, arr) => !fn(item, i, arr) ? accum : accum.concat(item), [])\n\n// Array#map\nconst map = (arr, fn) =>\n  reduce(arr, (accum, item, i, arr) => accum.concat(fn(item, i, arr)), [])\n\n// Array#includes\nconst includes = (arr, x) =>\n  reduce(arr, (accum, item, i, arr) => accum === true || item === x, false)\n\nconst _hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString')\nconst _dontEnums = [\n  'toString', 'toLocaleString', 'valueOf', 'hasOwnProperty',\n  'isPrototypeOf', 'propertyIsEnumerable', 'constructor'\n]\n\n// Object#keys\nconst keys = obj => {\n  // stripped down version of\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/Keys\n  const result = []\n  let prop\n  for (prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) result.push(prop)\n  }\n  if (!_hasDontEnumBug) return result\n  for (let i = 0, len = _dontEnums.length; i < len; i++) {\n    if (Object.prototype.hasOwnProperty.call(obj, _dontEnums[i])) result.push(_dontEnums[i])\n  }\n  return result\n}\n\n// Array#isArray\nconst isArray = obj => Object.prototype.toString.call(obj) === '[object Array]'\n\nconst _pad = n => n < 10 ? `0${n}` : n\n\n// Date#toISOString\nconst isoDate = () => {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\n  const d = new Date()\n  return d.getUTCFullYear() +\n    '-' + _pad(d.getUTCMonth() + 1) +\n    '-' + _pad(d.getUTCDate()) +\n    'T' + _pad(d.getUTCHours()) +\n    ':' + _pad(d.getUTCMinutes()) +\n    ':' + _pad(d.getUTCSeconds()) +\n    '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n    'Z'\n}\n\nmodule.exports = { map, reduce, filter, includes, keys, isArray, isoDate }\n","const { isoDate } = require('./lib/es-utils')\n\nclass BugsnagBreadcrumb {\n  constructor (name = '[anonymous]', metaData = {}, type = 'manual', timestamp = isoDate()) {\n    this.type = type\n    this.name = name\n    this.metaData = metaData\n    this.timestamp = timestamp\n  }\n\n  toJSON () {\n    return {\n      type: this.type,\n      name: this.name,\n      timestamp: this.timestamp,\n      metaData: this.metaData\n    }\n  }\n}\n\n// force `fast-safe-stringify` to do its thing\n// https://github.com/davidmarkclements/fast-safe-stringify#tojson-support\nBugsnagBreadcrumb.prototype.toJSON.forceDecirc = true\n\nmodule.exports = BugsnagBreadcrumb\n","const { includes } = require('./es-utils')\n\nmodule.exports = value =>\n  includes([ 'undefined', 'number' ], typeof value) &&\n  parseInt('' + value, 10) === value &&\n  value > 0\n","const { filter, reduce, keys, isArray } = require('./lib/es-utils')\nconst positiveIntIfDefined = require('./lib/positive-int-check')\n\nmodule.exports.schema = {\n  apiKey: {\n    defaultValue: () => null,\n    message: '(string) apiKey is required',\n    validate: value => typeof value === 'string' && value.length\n  },\n  appVersion: {\n    defaultValue: () => null,\n    message: '(string) appVersion should have a value if supplied',\n    validate: value => value === null || (typeof value === 'string' && value.length)\n  },\n  autoNotify: {\n    defaultValue: () => true,\n    message: '(boolean) autoNotify should be true or false',\n    validate: value => value === true || value === false\n  },\n  beforeSend: {\n    defaultValue: () => [],\n    message: '(array[Function]) beforeSend should only contain functions',\n    validate: value => typeof value === 'function' || (isArray(value) && filter(value, f => typeof f === 'function').length === value.length)\n  },\n  endpoint: {\n    defaultValue: () => 'https://notify.bugsnag.com',\n    message: '(string) endpoint should be set',\n    validate: () => true\n  },\n  sessionEndpoint: {\n    defaultValue: () => 'https://sessions.bugsnag.com',\n    message: '(string) sessionEndpoint should be set',\n    validate: () => true\n  },\n  autoCaptureSessions: {\n    defaultValue: () => false,\n    message: '(boolean) autoCaptureSessions should be true/false',\n    validate: val => val === true || val === false\n  },\n  notifyReleaseStages: {\n    defaultValue: () => null,\n    message: '(array[string]) notifyReleaseStages should only contain strings',\n    validate: value => value === null || (isArray(value) && filter(value, f => typeof f === 'string').length === value.length)\n  },\n  releaseStage: {\n    defaultValue: () => 'production',\n    message: '(string) releaseStage should be set',\n    validate: value => typeof value === 'string' && value.length\n  },\n  maxBreadcrumbs: {\n    defaultValue: () => 20,\n    message: '(number) maxBreadcrumbs must be a number (≤40) if specified',\n    validate: value => value === 0 || (positiveIntIfDefined(value) && (value === undefined || value <= 40))\n  },\n  autoBreadcrumbs: {\n    defaultValue: () => true,\n    message: '(boolean) autoBreadcrumbs should be true or false',\n    validate: (value) => typeof value === 'boolean'\n  },\n  user: {\n    defaultValue: () => null,\n    message: '(object) user should be an object',\n    validate: (value) => typeof value === 'object'\n  },\n  metaData: {\n    defaultValue: () => null,\n    message: '(object) metaData should be an object',\n    validate: (value) => typeof value === 'object'\n  }\n}\n\nmodule.exports.mergeDefaults = (opts, schema) => {\n  if (!opts || !schema) throw new Error('schema.mergeDefaults(opts, schema): opts and schema objects are required')\n  return reduce(keys(schema), (accum, key) => {\n    accum[key] = opts[key] !== undefined ? opts[key] : schema[key].defaultValue()\n    return accum\n  }, {})\n}\n\nmodule.exports.validate = (opts, schema) => {\n  if (!opts || !schema) throw new Error('schema.mergeDefaults(opts, schema): opts and schema objects are required')\n  const errors = reduce(keys(schema), (accum, key) => {\n    if (schema[key].validate(opts[key])) return accum\n    return accum.concat({ key, message: schema[key].message, value: opts[key] })\n  }, [])\n  return { valid: !errors.length, errors }\n}\n","module.exports = client =>\n  client.app && typeof client.app.releaseStage === 'string'\n    ? client.app.releaseStage\n    : client.config.releaseStage\n","// Given `err` which may be an error, does it have a stack property which is a string?\nmodule.exports = err =>\n  !!err &&\n  (!!err.stack || !!err.stacktrace || !!err['opera#sourceloc']) &&\n  typeof (err.stack || err.stacktrace || err['opera#sourceloc']) === 'string'\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (obj instanceof Object) {\n            for (var i = 0; i < props.length; i++) {\n                if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                    this['set' + _capitalize(props[i])](obj[props[i]]);\n                }\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function(StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                if (!curr['arguments']) {\n                  break;\n                }\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for (var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n","const ErrorStackParser = require('error-stack-parser')\nconst StackGenerator = require('stack-generator')\nconst hasStack = require('./lib/has-stack')\nconst { reduce, filter } = require('./lib/es-utils')\n\nclass BugsnagReport {\n  constructor (errorClass, errorMessage, stacktrace = [], handledState = defaultHandledState()) {\n    // duck-typing ftw >_<\n    this.__isBugsnagReport = true\n\n    this._ignored = false\n\n    // private (un)handled state\n    this._handledState = handledState\n\n    // setable props\n    this.app = undefined\n    this.apiKey = undefined\n    this.breadcrumbs = []\n    this.context = undefined\n    this.device = undefined\n    this.errorClass = stringOrFallback(errorClass, '[no error class]')\n    this.errorMessage = stringOrFallback(errorMessage, '[no error message]')\n    this.groupingHash = undefined\n    this.metaData = {}\n    this.request = undefined\n    this.severity = this._handledState.severity\n    this.stacktrace = reduce(stacktrace, (accum, frame) => {\n      const f = formatStackframe(frame)\n      // don't include a stackframe if none of its properties are defined\n      try {\n        if (JSON.stringify(f) === '{}') return accum\n        return accum.concat(f)\n      } catch (e) {\n        return accum\n      }\n    }, [])\n    this.user = undefined\n    this.session = undefined\n  }\n\n  ignore () {\n    this._ignored = true\n  }\n\n  isIgnored () {\n    return this._ignored\n  }\n\n  updateMetaData (section, ...args) {\n    if (!section) return this\n    let updates\n\n    // updateMetaData(\"section\", null) -> removes section\n    if (args[0] === null) return this.removeMetaData(section)\n\n    // updateMetaData(\"section\", \"property\", null) -> removes property from section\n    if (args[1] === null) return this.removeMetaData(section, args[0], args[1])\n\n    // normalise the two supported input types into object form\n    if (typeof args[0] === 'object') updates = args[0]\n    if (typeof args[0] === 'string') updates = { [args[0]]: args[1] }\n\n    // exit if we don't have an updates object at this point\n    if (!updates) return this\n\n    // ensure a section with this name exists\n    if (!this.metaData[section]) this.metaData[section] = {}\n\n    // merge the updates with the existing section\n    this.metaData[section] = { ...this.metaData[section], ...updates }\n\n    return this\n  }\n\n  removeMetaData (section, property) {\n    if (typeof section !== 'string') return this\n\n    // remove an entire section\n    if (!property) {\n      delete this.metaData[section]\n      return this\n    }\n\n    // remove a single property from a section\n    if (this.metaData[section]) {\n      delete this.metaData[section][property]\n      return this\n    }\n\n    return this\n  }\n\n  toJSON () {\n    return {\n      payloadVersion: '4',\n      exceptions: [\n        {\n          errorClass: this.errorClass,\n          message: this.errorMessage,\n          stacktrace: this.stacktrace,\n          type: 'browserjs'\n        }\n      ],\n      severity: this.severity,\n      unhandled: this._handledState.unhandled,\n      severityReason: this._handledState.severityReason,\n      app: this.app,\n      device: this.device,\n      breadcrumbs: this.breadcrumbs,\n      context: this.context,\n      user: this.user,\n      metaData: this.metaData,\n      groupingHash: this.groupingHash,\n      request: this.request,\n      session: this.session\n    }\n  }\n}\n\n// force `fast-safe-stringify` to do its thing\n// https://github.com/davidmarkclements/fast-safe-stringify#tojson-support\nBugsnagReport.prototype.toJSON.forceDecirc = true\n\n// takes a stacktrace.js style stackframe (https://github.com/stacktracejs/stackframe)\n// and returns a Bugsnag compatible stackframe (https://docs.bugsnag.com/api/error-reporting/#json-payload)\nconst formatStackframe = frame => {\n  const f = {\n    file: frame.fileName,\n    method: normaliseFunctionName(frame.functionName),\n    lineNumber: frame.lineNumber,\n    columnNumber: frame.columnNumber,\n    code: undefined,\n    inProject: undefined\n  }\n  // Some instances result in no file:\n  // - calling notify() from chrome's terminal results in no file/method.\n  // - non-error exception thrown from global code in FF\n  // This adds one.\n  if (f.lineNumber > -1 && !f.file && !f.method) {\n    f.file = 'global code'\n  }\n  return f\n}\n\nconst normaliseFunctionName = name => /^global code$/i.test(name) ? 'global code' : name\n\nconst defaultHandledState = () => ({\n  unhandled: false,\n  severity: 'warning',\n  severityReason: { type: 'handledException' }\n})\n\nconst stringOrFallback = (str, fallback) => typeof str === 'string' && str ? str : fallback\n\n// Helpers\n\nBugsnagReport.getStacktrace = (error, errorFramesToSkip = 0, generatedFramesToSkip = 0) => {\n  if (hasStack(error)) return ErrorStackParser.parse(error).slice(errorFramesToSkip)\n  // error wasn't provided or didn't have a stacktrace so try to walk the callstack\n  return filter(StackGenerator.backtrace(), frame =>\n    (frame.functionName || '').indexOf('StackGenerator$$') === -1\n  ).slice(1 + generatedFramesToSkip)\n}\n\nBugsnagReport.ensureReport = function (reportOrError, errorFramesToSkip = 0, generatedFramesToSkip = 0) {\n  // notify() can be called with a Report object. In this case no action is required\n  if (reportOrError.__isBugsnagReport) return reportOrError\n  try {\n    const stacktrace = BugsnagReport.getStacktrace(reportOrError, errorFramesToSkip, 1 + generatedFramesToSkip)\n    return new BugsnagReport(reportOrError.name, reportOrError.message, stacktrace)\n  } catch (e) {\n    return new BugsnagReport(reportOrError.name, reportOrError.message, [])\n  }\n}\n\nmodule.exports = BugsnagReport\n","module.exports = function pad (num, size) {\n  var s = '000000000' + num;\n  return s.substr(s.length - size);\n};\n","var pad = require('./pad.js');\n\nvar env = typeof window === 'object' ? window : self;\nvar globalCount = 0;\nfor (var prop in env) {\n  if (Object.hasOwnProperty.call(env, prop)) globalCount++;\n}\nvar mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;\nvar clientId = pad((mimeTypesLength +\n  navigator.userAgent.length).toString(36) +\n  globalCount.toString(36), 4);\n\nmodule.exports = function fingerprint () {\n  return clientId;\n};\n","const { isoDate } = require('./lib/es-utils')\nconst cuid = require('@bugsnag/cuid')\n\nclass Session {\n  constructor () {\n    this.id = cuid()\n    this.startedAt = isoDate()\n    this._handled = 0\n    this._unhandled = 0\n  }\n  toJSON () {\n    return {\n      id: this.id,\n      startedAt: this.startedAt,\n      events: { handled: this._handled, unhandled: this._unhandled }\n    }\n  }\n  trackError (report) {\n    this[report._handledState.unhandled ? '_unhandled' : '_handled'] += 1\n  }\n}\n\n// force `fast-safe-stringify` to do its thing\n// https://github.com/davidmarkclements/fast-safe-stringify#tojson-support\nSession.prototype.toJSON.forceDecirc = true\n\nmodule.exports = Session\n","\n/**\n * Expose `isError`.\n */\n\nmodule.exports = isError;\n\n/**\n * Test whether `value` is error object.\n *\n * @param {*} value\n * @returns {boolean}\n */\n\nfunction isError(value) {\n  switch (Object.prototype.toString.call(value)) {\n    case '[object Error]': return true;\n    case '[object Exception]': return true;\n    case '[object DOMException]': return true;\n    default: return value instanceof Error;\n  }\n}\n","const config = require('./config')\nconst BugsnagReport = require('./report')\nconst BugsnagBreadcrumb = require('./breadcrumb')\nconst BugsnagSession = require('./session')\nconst { map, reduce, includes, isArray } = require('./lib/es-utils')\nconst inferReleaseStage = require('./lib/infer-release-stage')\nconst isError = require('iserror')\n\nconst noop = () => {}\n\nclass BugsnagClient {\n  constructor (notifier, configSchema = config.schema, session = null) {\n    if (!notifier) throw new Error('new BugsnagClient(notifier, configSchema) requires `notifier` argument')\n    if (!notifier.name || !notifier.version || !notifier.url) {\n      throw new Error('new BugsnagClient(notifier, configSchema) - `notifier` requires: `{ name, version, url }`')\n    }\n\n    // notifier id\n    this.notifier = notifier\n\n    // config\n    this.configSchema = configSchema\n\n    // configure() should be called before notify()\n    this._configured = false\n\n    // i/o\n    this._transport = { name: 'NULL_TRANSPORT', sendSession: noop, sendReport: noop }\n    this._logger = { debug: noop, info: noop, warn: noop, error: noop }\n\n    // plugins\n    this.plugins = []\n\n    this.session = session\n    this.beforeSession = []\n\n    this.breadcrumbs = []\n\n    // setable props\n    this.app = {}\n    this.context = undefined\n    this.device = undefined\n    this.metaData = undefined\n    this.request = undefined\n    this.user = {}\n\n    // expose internal constructors\n    this.BugsnagReport = BugsnagReport\n    this.BugsnagBreadcrumb = BugsnagBreadcrumb\n    this.BugsnagSession = BugsnagSession\n  }\n\n  configure (opts = {}) {\n    this.config = config.mergeDefaults({ ...this.config, ...opts }, this.configSchema)\n    const validity = config.validate(this.config, this.configSchema)\n    if (!validity.valid === true) {\n      const err = new Error('Bugsnag configuration error')\n      err.errors = map(validity.errors, (err) => `${err.key} ${err.message} \\n  ${err.value}`)\n      throw err\n    }\n    if (typeof this.config.beforeSend === 'function') this.config.beforeSend = [ this.config.beforeSend ]\n    if (this.config.appVersion !== null) this.app.version = this.config.appVersion\n    if (this.config.metaData) this.metaData = this.config.metaData\n    if (this.config.user) this.user = this.config.user\n    this._configured = true\n    this._logger.debug(`Loaded!`)\n    return this\n  }\n\n  use (plugin) {\n    this.plugins.push(plugin)\n    return plugin.init(this)\n  }\n\n  transport (t) {\n    this._transport = t\n    return this\n  }\n\n  logger (l, sid) {\n    this._logger = l\n    return this\n  }\n\n  sessionDelegate (s) {\n    this._sessionDelegate = s\n    return this\n  }\n\n  startSession () {\n    if (!this._sessionDelegate) {\n      this._logger.warn('No session implementation is installed')\n      return this\n    }\n    return this._sessionDelegate.startSession(this)\n  }\n\n  leaveBreadcrumb (name, metaData, type, timestamp) {\n    if (!this._configured) throw new Error('Bugsnag must be configured before calling leaveBreadcrumb()')\n\n    // coerce bad values so that the defaults get set\n    name = name || undefined\n    type = typeof type === 'string' ? type : undefined\n    timestamp = typeof timestamp === 'string' ? timestamp : undefined\n    metaData = typeof metaData === 'object' && metaData !== null ? metaData : undefined\n\n    // if no name and no metaData, usefulness of this crumb is questionable at best so discard\n    if (typeof name !== 'string' && !metaData) return\n\n    const crumb = new BugsnagBreadcrumb(name, metaData, type, timestamp)\n\n    // push the valid crumb onto the queue and maintain the length\n    this.breadcrumbs.push(crumb)\n    if (this.breadcrumbs.length > this.config.maxBreadcrumbs) {\n      this.breadcrumbs = this.breadcrumbs.slice(this.breadcrumbs.length - this.config.maxBreadcrumbs)\n    }\n\n    return this\n  }\n\n  notify (error, opts = {}) {\n    if (!this._configured) throw new Error('Bugsnag must be configured before calling report()')\n\n    // releaseStage can be set via config.releaseStage or client.app.releaseStage\n    const releaseStage = inferReleaseStage(this)\n\n    // ensure we have an error (or a reasonable object representation of an error)\n    let { err, errorFramesToSkip, _opts } = normaliseError(error, opts, this._logger)\n    if (_opts) opts = _opts\n\n    // if we have something falsey at this point, report usage error\n    if (!err) {\n      this._logger.warn(`Usage error. notify() called with no \"error\" parameter`)\n      err = new Error('Bugsnag usage error. notify() called with no \"error\" parameter')\n    }\n\n    // ensure opts is an object\n    if (typeof opts !== 'object' || opts === null) opts = {}\n\n    // create a report from the error, if it isn't one already\n    const report = BugsnagReport.ensureReport(err, errorFramesToSkip, 1)\n\n    report.app = { ...{ releaseStage }, ...report.app, ...this.app }\n    report.context = report.context || opts.context || this.context || undefined\n    report.device = { ...report.device, ...this.device, ...opts.device }\n    report.request = { ...report.request, ...this.request, ...opts.request }\n    report.user = { ...report.user, ...this.user, ...opts.user }\n    report.metaData = { ...report.metaData, ...this.metaData, ...opts.metaData }\n    report.breadcrumbs = this.breadcrumbs.slice(0)\n\n    if (this.session) {\n      this.session.trackError(report)\n      report.session = this.session\n    }\n\n    // set severity if supplied\n    if (opts.severity !== undefined) {\n      report.severity = opts.severity\n      report._handledState.severityReason = { type: 'userSpecifiedSeverity' }\n    }\n\n    // exit early if the reports should not be sent on the current releaseStage\n    if (isArray(this.config.notifyReleaseStages) && !includes(this.config.notifyReleaseStages, releaseStage)) {\n      this._logger.warn(`Report not sent due to releaseStage/notifyReleaseStages configuration`)\n      return false\n    }\n\n    const originalSeverity = report.severity\n\n    const beforeSend = [].concat(opts.beforeSend).concat(this.config.beforeSend)\n    const preventSend = reduce(beforeSend, (accum, fn) => {\n      if (accum === true) return true\n      if (typeof fn === 'function' && fn(report) === false) return true\n      if (report.isIgnored()) return true\n      return false\n    }, false)\n\n    if (preventSend) {\n      this._logger.debug(`Report not sent due to beforeSend callback`)\n      return false\n    }\n\n    // only leave a crumb for the error if actually got sent\n    if (this.config.autoBreadcrumbs) {\n      this.leaveBreadcrumb(report.errorClass, {\n        errorClass: report.errorClass,\n        errorMessage: report.errorMessage,\n        severity: report.severity,\n        stacktrace: report.stacktrace\n      }, 'error')\n    }\n\n    if (originalSeverity !== report.severity) {\n      report._handledState.severityReason = { type: 'userCallbackSetSeverity' }\n    }\n\n    this._transport.sendReport(this._logger, this.config, {\n      apiKey: report.apiKey || this.config.apiKey,\n      notifier: this.notifier,\n      events: [ report ]\n    })\n\n    return true\n  }\n}\n\nconst normaliseError = (error, opts, logger) => {\n  let err\n  let errorFramesToSkip = 0\n  let _opts\n  switch (typeof error) {\n    case 'string':\n      if (typeof opts === 'string') {\n        // ≤v3 used to have a notify('ErrorName', 'Error message') interface\n        // report usage/deprecation errors if this function is called like that\n        logger.warn(`Usage error. notify() called with (string, string) but expected (error, object)`)\n        err = new Error('Bugsnag usage error. notify() called with (string, string) but expected (error, object)')\n        _opts = { metaData: { notifier: { notifyArgs: [ error, opts ] } } }\n      } else {\n        err = new Error(String(error))\n        errorFramesToSkip += 2\n      }\n      break\n    case 'number':\n    case 'boolean':\n      err = new Error(String(error))\n      break\n    case 'function':\n      logger.warn(`Usage error. notify() called with a function as \"error\" parameter`)\n      err = new Error('Bugsnag usage error. notify() called with a function as \"error\" parameter')\n      break\n    case 'object':\n      if (error !== null && (isError(error) || error.__isBugsnagReport)) {\n        err = error\n      } else if (error !== null && hasNecessaryFields(error)) {\n        err = new Error(error.message || error.errorMessage)\n        err.name = error.name || error.errorClass\n        errorFramesToSkip += 2\n      } else {\n        logger.warn(`Usage error. notify() called with an unsupported object as \"error\" parameter. Supply an Error or { name, message } object.`)\n        err = new Error('Bugsnag usage error. notify() called with an unsupported object as \"error\" parameter. Supply an Error or { name, message } object.')\n      }\n      break\n  }\n  return { err, errorFramesToSkip, _opts }\n}\n\nconst hasNecessaryFields = error =>\n  (typeof error.name === 'string' || typeof error.errorClass === 'string') &&\n  (typeof error.message === 'string' || typeof error.errorMessage === 'string')\n\nmodule.exports = BugsnagClient\n","const positiveIntIfDefined = require('../lib/positive-int-check')\n\n/*\n * Throttles and dedupes error reports\n */\n\nmodule.exports = {\n  init: (client) => {\n    // track sent events for each init of the plugin\n    let n = 0\n\n    // add beforeSend hook\n    client.config.beforeSend.push((report) => {\n      // have max events been sent already?\n      if (n >= client.config.maxEvents) return report.ignore()\n      n++\n    })\n\n    client.refresh = () => { n = 0 }\n  },\n  configSchema: {\n    maxEvents: {\n      defaultValue: () => 10,\n      message: '(number) maxEvents must be a positive integer ≤100',\n      validate: val => positiveIntIfDefined(val) && val < 100\n    }\n  }\n}\n","module.exports = {\n  releaseStage: {\n    defaultValue: () => {\n      if (/^localhost(:\\d+)?$/.test(window.location.host)) return 'development'\n      return 'production'\n    },\n    message: '(string) releaseStage should be set',\n    validate: value => typeof value === 'string' && value.length\n  },\n  collectUserIp: {\n    defaultValue: () => true,\n    message: '(boolean) collectUserIp should true/false',\n    validate: value => value === true || value === false\n  }\n}\n","const { map, reduce, filter } = require('../../base/lib/es-utils')\n\n/*\n * Leaves breadcrumbs when console log methods are called\n */\nmodule.exports = {\n  init: (client) => {\n    map(CONSOLE_LOG_METHODS, method => {\n      const original = console[method]\n      console[method] = (...args) => {\n        client.leaveBreadcrumb('Console output', reduce(args, (accum, arg, i) => {\n          // do the best/simplest stringification of each argument\n          let stringified = String(arg)\n          // if it stringifies to [object Object] attempt to JSON stringify\n          if (stringified === '[object Object]') {\n            // catch stringify errors and fallback to [object Object]\n            try { stringified = JSON.stringify(arg) } catch (e) {}\n          }\n          accum[`[${i}]`] = stringified\n          return accum\n        }, {\n          severity: method.indexOf('group') === 0 ? 'log' : method\n        }), 'log')\n        original.apply(console, args)\n      }\n      console[method]._restore = () => { console[method] = original }\n    })\n  },\n  destroy: () => CONSOLE_LOG_METHODS.forEach(method => {\n    if (typeof console[method]._restore === 'function') console[method]._restore()\n  }),\n  configSchema: {\n    consoleBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: '(boolean) consoleBreadcrumbsEnabled should be true or false'\n    }\n  }\n}\n\nconst CONSOLE_LOG_METHODS = filter([ 'log', 'debug', 'info', 'warn', 'error' ], method =>\n  typeof console !== 'undefined' && typeof console[method] === 'function'\n)\n","/*\n * Sets the default context to be the current URL\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift(report => {\n      if (report.context) return\n      report.context = window.location.pathname\n    })\n  }\n}\n","const { isoDate } = require('../../base/lib/es-utils')\n/*\n * Automatically detects browser device details\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift((report) => {\n      report.device = {\n        ...{\n          time: isoDate(),\n          locale: navigator.browserLanguage || navigator.systemLanguage || navigator.userLanguage || navigator.language,\n          userAgent: navigator.userAgent\n        },\n        ...report.device\n      }\n    })\n\n    client.beforeSession.push(session => { session.device = { userAgent: navigator.userAgent } })\n  }\n}\n","const { reduce } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  init: (client) => {\n    let html = ''\n    let DOMContentLoaded = false\n    const getHtml = () => document.documentElement.outerHTML\n    const originalLocation = window.location.href\n\n    const addInlineContent = report => {\n      const frame = report.stacktrace[0]\n      if (!frame || !frame.file || !frame.lineNumber) return frame\n      if (frame.file.replace(/#.*$/, '') !== originalLocation.replace(/#.*$/, '')) return frame\n      if (!DOMContentLoaded || !html) html = getHtml()\n      const htmlLines = [ '<!-- DOCUMENT START -->' ].concat(html.split('\\n'))\n      const { script, start } = extractScriptContent(htmlLines, frame.lineNumber - 1)\n      const code = reduce(script, (accum, line, i) => {\n        if (Math.abs((start + i + 1) - frame.lineNumber) > 10) return accum\n        accum[`${start + i + 1}`] = line\n        return accum\n      }, {})\n      frame.code = code\n      report.updateMetaData('script', { content: script.join('\\n') })\n    }\n\n    // get whatever HTML exists at this point in time\n    html = getHtml()\n\n    // then update it when the DOM content has loaded\n    document.onreadystatechange = () => {\n      // IE8 compatible alternative to document#DOMContentLoaded\n      if (document.readyState === 'interactive') {\n        html = getHtml()\n        DOMContentLoaded = true\n      }\n    }\n\n    client.config.beforeSend.unshift(addInlineContent)\n  }\n}\n\nconst scriptStartRe = /^.*<script.*?>/\nconst scriptEndRe = /<\\/script>.*$/\nconst extractScriptContent = module.exports.extractScriptContent = (lines, startLine) => {\n  // search down for </script>\n  let line = startLine\n  while (line < lines.length && !scriptEndRe.test(lines[line])) line++\n\n  // search up for <script>\n  const end = line\n  while (line > 0 && !scriptStartRe.test(lines[line])) line--\n  const start = line\n\n  // strip <script> tags so that lines just contain js content\n  const script = lines.slice(start, end + 1)\n  script[0] = script[0].replace(scriptStartRe, '')\n  script[script.length - 1] = script[script.length - 1].replace(scriptEndRe, '')\n\n  // return the array of lines, and the line number the script started at\n  return { script, start }\n}\n","/*\n * Prevent collection of user IPs\n */\nmodule.exports = {\n  init: (client) => {\n    if (client.config.collectUserIp) return\n    client.config.beforeSend.push(report => {\n      report.user = { id: '[NOT COLLECTED]', ...report.user }\n      report.request = { clientIp: '[NOT COLLECTED]', ...report.request }\n    })\n  }\n}\n","/*\n * Leaves breadcrumbs when navigation methods are called or events are emitted\n */\nmodule.exports = {\n  init: (client) => {\n    if (!('addEventListener' in window)) return\n\n    // returns a function that will drop a breadcrumb with a given name\n    const drop = name => () => client.leaveBreadcrumb(name, {}, 'navigation')\n\n    // simple drops – just names, no meta\n    window.addEventListener('pagehide', drop('Page hidden'), true)\n    window.addEventListener('pageshow', drop('Page shown'), true)\n    window.addEventListener('load', drop('Page loaded'), true)\n    window.document.addEventListener('DOMContentLoaded', drop('DOMContentLoaded'), true)\n    // some browsers like to emit popstate when the page loads, so only add the postate listener after that\n    window.addEventListener('load', () => window.addEventListener('popstate', drop('Navigated back'), true))\n\n    // hashchange has some metaData that we care about\n    window.addEventListener('hashchange', event => {\n      const metaData = event.oldURL\n        ? { from: relativeLocation(event.oldURL), to: relativeLocation(event.newURL), state: window.history.state }\n        : { to: relativeLocation(window.location.href) }\n      client.leaveBreadcrumb('Hash changed', metaData, 'navigation')\n    }, true)\n\n    // the only way to know about replaceState/pushState is to wrap them… >_<\n\n    if (window.history.replaceState) wrapHistoryFn(client, window.history, 'replaceState')\n    if (window.history.pushState) wrapHistoryFn(client, window.history, 'pushState')\n\n    client.leaveBreadcrumb('Bugsnag loaded', {}, 'navigation')\n  },\n  destroy: () => {\n    window.history.replaceState._restore()\n    window.history.pushState._restore()\n  },\n  configSchema: {\n    navigationBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: '(boolean) navigationBreadcrumbsEnabled should be true or false'\n    }\n  }\n}\n\n// takes a full url like http://foo.com:1234/pages/01.html?yes=no#section-2 and returns\n// just the path and hash parts, e.g. /pages/01.html?yes=no#section-2\nconst relativeLocation = url => {\n  const a = document.createElement('A')\n  a.href = url\n  return `${a.pathname}${a.search}${a.hash}`\n}\n\nconst stateChangeToMetaData = (state, title, url) => {\n  const currentPath = relativeLocation(window.location.href)\n  return { title, state, prevState: window.history.state, to: url || currentPath, from: currentPath }\n}\n\nconst wrapHistoryFn = (client, target, fn) => {\n  const orig = target[fn]\n  target[fn] = (state, title, url) => {\n    client.leaveBreadcrumb(`History ${fn}`, stateChangeToMetaData(state, title, url), 'navigation')\n    // if throttle plugin is in use, refresh the event sent count\n    if (typeof client.refresh === 'function') client.refresh()\n    // if the client is operating in session-mode, a new route should trigger a new session\n    if (client.session) client.startSession()\n    orig.call(target, state, title, url)\n  }\n  target[fn]._restore = () => { target[fn] = orig }\n}\n","/*\n * Sets the report request: { url } to be the current href\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift(report => {\n      if (report.request && report.request.url) return\n      report.request = { ...report.request, url: window.location.href }\n    })\n  }\n}\n","const { map, isArray, includes } = require('../../base/lib/es-utils')\nconst inferReleaseStage = require('../../base/lib/infer-release-stage')\n\nmodule.exports = {\n  init: client => client.sessionDelegate(sessionDelegate)\n}\n\nconst sessionDelegate = {\n  startSession: client => {\n    const sessionClient = client\n    sessionClient.session = new client.BugsnagSession()\n\n    map(sessionClient.beforeSession, (fn) => fn(sessionClient))\n\n    const releaseStage = inferReleaseStage(sessionClient)\n\n    // exit early if the reports should not be sent on the current releaseStage\n    if (isArray(sessionClient.config.notifyReleaseStages) && !includes(sessionClient.config.notifyReleaseStages, releaseStage)) {\n      sessionClient._logger.warn(`Session not sent due to releaseStage/notifyReleaseStages configuration`)\n      return sessionClient\n    }\n\n    sessionClient._transport.sendSession(\n      sessionClient._logger,\n      sessionClient.config,\n      {\n        notifier: sessionClient.notifier,\n        device: sessionClient.device,\n        app: { ...{ releaseStage }, ...sessionClient.app },\n        sessions: [\n          {\n            id: sessionClient.session.id,\n            startedAt: sessionClient.session.startedAt,\n            user: sessionClient.user\n          }\n        ]\n      }\n    )\n\n    return sessionClient\n  }\n}\n","/*\n * Remove query strings (and fragments) from stacktraces\n */\nconst { map } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.push(report => {\n      report.stacktrace = map(report.stacktrace, frame => ({ ...frame, file: strip(frame.file) }))\n    })\n  }\n}\n\nconst strip = module.exports._strip = str =>\n  typeof str === 'string'\n    ? str.replace(/\\?.*$/, '').replace(/#.*$/, '')\n    : str\n","const ErrorStackParser = require('error-stack-parser')\nconst hasStack = require('../../base/lib/has-stack')\nconst { reduce } = require('../../base/lib/es-utils')\nconst isError = require('iserror')\n\n/*\n * Automatically notifies Bugsnag when window.onunhandledrejection is called\n */\nlet _listener\nmodule.exports = {\n  init: (client) => {\n    const listener = event => {\n      let error = event.reason\n      let isBluebird = false\n\n      if (event.detail && event.detail.reason) {\n        error = event.detail.reason\n        isBluebird = true\n      }\n\n      const handledState = {\n        severity: 'error',\n        unhandled: true,\n        severityReason: { type: 'unhandledPromiseRejection' }\n      }\n\n      let report\n      if (error && hasStack(error)) {\n        // if it quacks like an Error…\n        report = new client.BugsnagReport(error.name, error.message, ErrorStackParser.parse(error), handledState)\n        if (isBluebird) {\n          report.stacktrace = reduce(report.stacktrace, fixBluebirdStacktrace(error), [])\n        }\n      } else {\n        // if it doesn't…\n        const msg = 'Rejection reason was not an Error. See \"Promise\" tab for more detail.'\n        report = new client.BugsnagReport(\n          error && error.name ? error.name : 'UnhandledRejection',\n          error && error.message ? error.message : msg,\n          [],\n          handledState\n        )\n        // stuff the rejection reason into metaData, it could be useful\n        report.updateMetaData('promise', 'rejection reason', serializableReason(error))\n      }\n\n      client.notify(report)\n    }\n    if ('addEventListener' in window) {\n      window.addEventListener('unhandledrejection', listener)\n    } else {\n      window.onunhandledrejection = (reason, promise) => {\n        listener({ detail: { reason, promise } })\n      }\n    }\n    _listener = listener\n  },\n  destroy: () => {\n    if (_listener) {\n      if ('addEventListener' in window) {\n        window.removeEventListener('unhandledrejection', _listener)\n      } else {\n        window.onunhandledrejection = null\n      }\n    }\n    _listener = null\n  }\n}\n\nconst serializableReason = (err) => {\n  if (err === null || err === undefined) {\n    return 'undefined (or null)'\n  } else if (isError(err)) {\n    return {\n      [Object.prototype.toString.call(err)]: {\n        name: err.name,\n        message: err.message,\n        code: err.code,\n        stack: err.stack\n      }\n    }\n  } else {\n    return err\n  }\n}\n\n// The stack parser on bluebird stacks in FF get a suprious first frame:\n//\n// Error: derp\n//   b@http://localhost:5000/bluebird.html:22:24\n//   a@http://localhost:5000/bluebird.html:18:9\n//   @http://localhost:5000/bluebird.html:14:9\n//\n// results in\n//   […]\n//     0: Object { file: \"Error: derp\", method: undefined, lineNumber: undefined, … }\n//     1: Object { file: \"http://localhost:5000/bluebird.html\", method: \"b\", lineNumber: 22, … }\n//     2: Object { file: \"http://localhost:5000/bluebird.html\", method: \"a\", lineNumber: 18, … }\n//     3: Object { file: \"http://localhost:5000/bluebird.html\", lineNumber: 14, columnNumber: 9, … }\n//\n// so the following reduce/accumulator function removes such frames\n//\n// Bluebird pads method names with spaces so trim that too…\n// https://github.com/petkaantonov/bluebird/blob/b7f21399816d02f979fe434585334ce901dcaf44/src/debuggability.js#L568-L571\nconst fixBluebirdStacktrace = (error) => (accum, frame) => {\n  if (frame.file === error.toString()) return accum\n  if (frame.method) {\n    frame.method = frame.method.replace(/^\\s+/, '')\n  }\n  return accum.concat(frame)\n}\n","/*\n * Automatically notifies Bugsnag when window.onerror is called\n */\n\nmodule.exports = {\n  init: (client) => {\n    const onerror = (messageOrEvent, url, lineNo, charNo, error) => {\n      // Ignore errors with no info due to CORS settings\n      if (lineNo === 0 && /Script error\\.?/.test(messageOrEvent)) {\n        client._logger.warn('Ignoring cross-domain or eval script error. See https://docs.bugsnag.com/platforms/browsers/faq/#3-cross-origin-script-errors')\n        return\n      }\n\n      // any error sent to window.onerror is unhandled and has severity=error\n      const handledState = { severity: 'error', unhandled: true, severityReason: { type: 'unhandledException' } }\n\n      let report\n      if (error) {\n        if (error.name && error.message) {\n          report = new client.BugsnagReport(error.name, error.message, decorateStack(client.BugsnagReport.getStacktrace(error), url, lineNo, charNo), handledState)\n        } else {\n          report = new client.BugsnagReport('window.onerror', String(error), decorateStack(client.BugsnagReport.getStacktrace(error, 1), url, lineNo, charNo), handledState)\n          report.updateMetaData('window onerror', { error })\n        }\n      } else if ((typeof messageOrEvent === 'object' && messageOrEvent !== null) && !url && !lineNo && !charNo && !error) {\n        const name = messageOrEvent.type ? `Event: ${messageOrEvent.type}` : 'window.onerror'\n        const message = messageOrEvent.message || messageOrEvent.detail || ''\n        report = new client.BugsnagReport(name, message, client.BugsnagReport.getStacktrace(new Error(), 1).slice(1), handledState)\n        report.updateMetaData('window onerror', { event: messageOrEvent })\n      } else {\n        report = new client.BugsnagReport('window.onerror', String(messageOrEvent), decorateStack(client.BugsnagReport.getStacktrace(error, 1), url, lineNo, charNo), handledState)\n        report.updateMetaData('window onerror', { event: messageOrEvent })\n      }\n\n      client.notify(report)\n\n      if (typeof prevOnError === 'function') prevOnError(messageOrEvent, url, lineNo, charNo, error)\n    }\n\n    const prevOnError = window.onerror\n    window.onerror = onerror\n  }\n}\n\nconst decorateStack = (stack, url, lineNo, charNo) => {\n  const culprit = stack[0]\n  if (!culprit) return stack\n  if (!culprit.fileName) culprit.setFileName(url)\n  if (!culprit.lineNumber) culprit.setLineNumber(lineNo)\n  if (!culprit.columnNumber) {\n    if (charNo !== undefined) {\n      culprit.setColumnNumber(charNo)\n    } else if (window.event && window.event.errorCharacter) {\n      culprit.setColumnNumber(window.event && window.event.errorCharacter)\n    }\n  }\n  return stack\n}\n","const jsonStringify = require('fast-safe-stringify')\n\nmodule.exports = report => {\n  let payload = jsonStringify(report)\n  if (payload.length > 10e5) {\n    delete report.events[0].metaData\n    report.events[0].metaData = {\n      notifier:\n`WARNING!\nThe serialized payload was ${payload.length / 10e5}MB. The limit is 1MB.\nreport.metaData was stripped to make the payload of a deliverable size.`\n    }\n    payload = jsonStringify(report)\n    if (payload.length > 10e5) throw new Error('payload exceeded 1MB limit')\n  }\n  return payload\n}\n","const makePayload = require('./lib/payload')\nconst jsonStringify = require('fast-safe-stringify')\nconst { isoDate } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  name: 'XDomainRequest',\n  sendReport: (logger, config, report, cb = () => {}) => {\n    const url = `${matchPageProtocol(config.endpoint, window.location.protocol)}?apiKey=${encodeURIComponent(config.apiKey)}&payloadVersion=4.0&sentAt=${encodeURIComponent(isoDate())}`\n    const req = new window.XDomainRequest()\n    req.onload = function () {\n      cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    setTimeout(() => {\n      try {\n        req.send(makePayload(report))\n      } catch (e) {\n        logger.error(e)\n      }\n    }, 0)\n  },\n  sendSession: (logger, config, session, cb = () => {}) => {\n    const url = `${matchPageProtocol(config.sessionEndpoint, window.location.protocol)}?apiKey=${encodeURIComponent(config.apiKey)}&payloadVersion=1.0&sentAt=${encodeURIComponent(isoDate())}`\n    const req = new window.XDomainRequest()\n    req.onload = function () {\n      cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    setTimeout(() => {\n      try {\n        req.send(jsonStringify(session))\n      } catch (e) {\n        logger.error(e)\n      }\n    }, 0)\n  }\n}\n\nconst matchPageProtocol = module.exports._matchPageProtocol = (endpoint, pageProtocol) =>\n  pageProtocol === 'http:'\n    ? endpoint.replace(/^https:/, 'http:')\n    : endpoint\n","const makePayload = require('./lib/payload')\nconst jsonStringify = require('fast-safe-stringify')\nconst { isoDate } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  name: 'XMLHttpRequest',\n  sendReport: (logger, config, report, cb = () => {}) => {\n    const url = config.endpoint\n    const req = new window.XMLHttpRequest()\n    req.onreadystatechange = function () {\n      if (req.readyState === window.XMLHttpRequest.DONE) cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    req.setRequestHeader('Content-Type', 'application/json')\n    req.setRequestHeader('Bugsnag-Api-Key', report.apiKey || config.apiKey)\n    req.setRequestHeader('Bugsnag-Payload-Version', '4.0')\n    req.setRequestHeader('Bugsnag-Sent-At', isoDate())\n    try {\n      req.send(makePayload(report))\n    } catch (e) {\n      logger.error(e)\n    }\n  },\n  sendSession: (logger, config, session, cb = () => {}) => {\n    const url = config.sessionEndpoint\n    const req = new window.XMLHttpRequest()\n    req.onreadystatechange = function () {\n      if (req.readyState === window.XMLHttpRequest.DONE) cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    req.setRequestHeader('Content-Type', 'application/json')\n    req.setRequestHeader('Bugsnag-Api-Key', config.apiKey)\n    req.setRequestHeader('Bugsnag-Payload-Version', '1.0')\n    req.setRequestHeader('Bugsnag-Sent-At', isoDate())\n    try {\n      req.send(jsonStringify(session))\n    } catch (e) {\n      logger.error(e)\n    }\n  }\n}\n","const name = 'Bugsnag JavaScript'\nconst version = '4.4.0'\nconst url = 'https://github.com/bugsnag/bugsnag-js'\n\nconst Client = require('../base/client')\nconst Report = require('../base/report')\nconst Session = require('../base/session')\nconst Breadcrumb = require('../base/breadcrumb')\nconst { map, reduce } = require('../base/lib/es-utils')\n\n// extend the base config schema with some browser-specific options\nconst schema = { ...require('../base/config').schema, ...require('./config') }\n\nconst pluginWindowOnerror = require('./plugins/window-onerror')\nconst pluginUnhandledRejection = require('./plugins/unhandled-rejection')\nconst pluginDevice = require('./plugins/device')\nconst pluginContext = require('./plugins/context')\nconst pluginRequest = require('./plugins/request')\nconst pluginThrottle = require('../base/plugins/throttle')\nconst pluginConsoleBreadcrumbs = require('./plugins/console-breadcrumbs')\nconst pluginNetworkBreadcrumbs = require('./plugins/network-breadcrumbs')\nconst pluginNavigationBreadcrumbs = require('./plugins/navigation-breadcrumbs')\nconst pluginInteractionBreadcrumbs = require('./plugins/interaction-breadcrumbs')\nconst pluginInlineScriptContent = require('./plugins/inline-script-content')\nconst pluginSessions = require('./plugins/sessions')\nconst pluginIp = require('./plugins/ip')\nconst pluginStripQueryString = require('./plugins/strip-query-string')\n\nconst plugins = [\n  pluginWindowOnerror,\n  pluginUnhandledRejection,\n  pluginDevice,\n  pluginContext,\n  pluginRequest,\n  pluginThrottle,\n  pluginConsoleBreadcrumbs,\n  pluginNetworkBreadcrumbs,\n  pluginNavigationBreadcrumbs,\n  pluginInteractionBreadcrumbs,\n  pluginInlineScriptContent,\n  pluginSessions,\n  pluginIp,\n  pluginStripQueryString\n]\n\nconst transports = {\n  'XDomainRequest': require('./transports/x-domain-request'),\n  'XMLHttpRequest': require('./transports/xml-http-request')\n}\n\nmodule.exports = (opts, userPlugins = []) => {\n  // handle very simple use case where user supplies just the api key as a string\n  if (typeof opts === 'string') opts = { apiKey: opts }\n\n  // support renamed option\n  if (opts.sessionTrackingEnabled) {\n    opts.autoCaptureSessions = opts.sessionTrackingEnabled\n  }\n\n  // allow plugins to augment the schema with their own options\n  const finalSchema = reduce([].concat(plugins).concat(userPlugins), (accum, plugin) => {\n    if (!plugin.configSchema) return accum\n    return { ...accum, ...plugin.configSchema }\n  }, schema)\n\n  const bugsnag = new Client({ name, version, url }, finalSchema)\n\n  // set transport based on browser capability (IE 8+9 have an XDomainRequest object)\n  bugsnag.transport(window.XDomainRequest ? transports.XDomainRequest : transports.XMLHttpRequest)\n\n  // set logger based on browser capability\n  if (typeof console !== 'undefined' && typeof console.debug === 'function') {\n    const logger = getPrefixedConsole()\n    bugsnag.logger(logger)\n  }\n\n  try {\n    // configure with user supplied options\n    // errors can be thrown here that prevent the lib from being in a useable state\n    bugsnag.configure(opts)\n  } catch (e) {\n    bugsnag._logger.warn(e)\n    if (e.errors) map(e.errors, bugsnag._logger.warn)\n    // rethrow. if there was an error with configuration\n    // the library is not going to work\n    throw e\n  }\n\n  // always-on browser-specific plugins\n  bugsnag.use(pluginDevice)\n  bugsnag.use(pluginContext)\n  bugsnag.use(pluginRequest)\n  bugsnag.use(pluginInlineScriptContent)\n  bugsnag.use(pluginThrottle)\n  bugsnag.use(pluginSessions)\n  bugsnag.use(pluginIp)\n  bugsnag.use(pluginStripQueryString)\n\n  // optional browser-specific plugins\n\n  if (bugsnag.config.autoNotify !== false) {\n    bugsnag.use(pluginWindowOnerror)\n    bugsnag.use(pluginUnhandledRejection)\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'navigationBreadcrumbsEnabled')) {\n    bugsnag.use(pluginNavigationBreadcrumbs)\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'interactionBreadcrumbsEnabled')) {\n    bugsnag.use(pluginInteractionBreadcrumbs)\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'networkBreadcrumbsEnabled')) {\n    bugsnag.use(pluginNetworkBreadcrumbs)\n  }\n\n  // because console breadcrumbs play havoc with line numbers,\n  // if not explicitly enabled, only setup on non-development evironments\n  if (inferBreadcrumbSetting(bugsnag.config, 'consoleBreadcrumbsEnabled', false)) {\n    bugsnag.use(pluginConsoleBreadcrumbs)\n  }\n\n  // init user supplied plugins\n  map(userPlugins, (plugin) => bugsnag.use(plugin))\n\n  return bugsnag.config.autoCaptureSessions\n    ? bugsnag.startSession()\n    : bugsnag\n}\n\nconst getPrefixedConsole = () => {\n  const logger = {}\n  const consoleLog = console['log']\n  map([ 'debug', 'info', 'warn', 'error' ], (method) => {\n    const consoleMethod = console[method]\n    logger[method] = typeof consoleMethod === 'function'\n      ? consoleMethod.bind(console, '[bugsnag]')\n      : consoleLog.bind(console, '[bugsnag]')\n  })\n  return logger\n}\n\nconst inferBreadcrumbSetting = (config, val, defaultInDev = true) =>\n  typeof config[val] === 'boolean'\n    ? config[val]\n    : (config.autoBreadcrumbs &&\n        (defaultInDev || !/^dev(elopment)?$/.test(config.releaseStage))\n      )\n\n// Stub this value because this is what the type interface looks like\n// (types/bugsnag.d.ts). This is only an issue in Angular's development\n// mode as its TS/DI thingy attempts to use this value at runtime.\n// In most other situations, TS only uses the types at compile time.\nmodule.exports.Bugsnag = {\n  Client,\n  Report,\n  Session,\n  Breadcrumb\n}\n\n// Export a \"default\" property for compatibility with ESM imports\nmodule.exports['default'] = module.exports\n","\nreturn _$browser_12;\n\n});"]}