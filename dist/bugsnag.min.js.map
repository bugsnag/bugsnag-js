{"version":3,"sources":["node_modules/browser-pack-flat/_prelude","node_modules/@bugsnag/cuid/index.js","browser/plugins/interaction-breadcrumbs.js","browser/plugins/network-breadcrumbs.js","node_modules/fast-safe-stringify/index.js","base/lib/es-utils.js","base/breadcrumb.js","base/lib/positive-int-check.js","base/config.js","base/lib/infer-release-stage.js","base/lib/has-stack.js","node_modules/stackframe/stackframe.js","node_modules/error-stack-parser/error-stack-parser.js","node_modules/stack-generator/stack-generator.js","base/report.js","node_modules/@bugsnag/cuid/lib/pad.js","node_modules/@bugsnag/cuid/lib/fingerprint.browser.js","base/session.js","node_modules/iserror/index.js","base/client.js","base/plugins/throttle.js","browser/config.js","browser/plugins/console-breadcrumbs.js","browser/plugins/context.js","browser/plugins/device.js","browser/plugins/inline-script-content.js","browser/plugins/ip.js","browser/plugins/navigation-breadcrumbs.js","browser/plugins/request.js","browser/plugins/sessions.js","browser/plugins/strip-query-string.js","browser/plugins/unhandled-rejection.js","browser/plugins/window-onerror.js","browser/transports/lib/payload.js","browser/transports/x-domain-request.js","browser/transports/xml-http-request.js","browser/index.js","node_modules/browser-pack-flat/_postlude"],"names":["f","exports","module","define","amd","window","global","self","this","bugsnag","randomBlock","_$pad_31","Math","random","discreteValues","toString","base","blockSize","safeCounter","c","cuid","Date","getTime","_$fingerprint_30","getNodeSelector","el","parts","tagName","id","push","className","length","split","join","document","querySelectorAll","Array","prototype","indexOf","e","parentNode","childNodes","index","call","truncate","value","slice","handleXHRLoad","REQUEST_URL_KEY","client","config","endpoint","sessionEndpoint","metaData","status","request","REQUEST_METHOD_KEY","leaveBreadcrumb","BREADCRUMB_TYPE","handleXHRError","stringify","obj","decirc","JSON","Circle","val","k","parent","count","stack","toJSON","forceDecirc","undefined","i","key","Object","hasOwnProperty","pop","reduce","arr","fn","accum","len","_hasDontEnumBug","propertyIsEnumerable","_dontEnums","_pad","n","_$esUtils_4","map","item","concat","filter","includes","x","keys","result","prop","isArray","isoDate","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","__isoDate_1","BugsnagBreadcrumb","name","arguments","type","timestamp","_classCallCheck","_$BugsnagBreadcrumb_1","__includes_7","_$positiveIntCheck_7","parseInt","__filter_3","__reduce_3","__keys_3","__isArray_3","_$config_3","schema","apiKey","defaultValue","message","validate","appVersion","autoNotify","beforeSend","autoCaptureSessions","notifyReleaseStages","releaseStage","maxBreadcrumbs","autoBreadcrumbs","user","mergeDefaults","opts","Error","errors","valid","_$inferReleaseStage_6","app","_$hasStack_5","err","stacktrace","root","factory","_$stackframe_36","StackFrame","_isNumber","isNaN","parseFloat","isFinite","_capitalize","str","charAt","toUpperCase","substring","_getter","p","props","booleanProps","numericProps","stringProps","arrayProps","getArgs","args","setArgs","v","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","getFunctionName","getFileName","getLineNumber","getColumnNumber","Boolean","j","Number","String","_$errorStackParser_32","ErrorStackParser","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","parse","error","parseOpera","match","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","exec","replace","line","tokens","locationParts","functionName","fileName","lineNumber","columnNumber","source","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","argsRaw","functionCall","shift","_$stackGenerator_35","StackGenerator","backtrace","maxStackSize","curr","callee","test","RegExp","$1","caller","__reduce_9","__filter_9","BugsnagReport","errorClass","errorMessage","handledState","defaultHandledState","___classCallCheck_9","__isBugsnagReport","_ignored","_handledState","breadcrumbs","context","device","stringOrFallback","groupingHash","severity","frame","formatStackframe","session","ignore","isIgnored","updateMetaData","section","_updates","updates","removeMetaData","_extends","property","payloadVersion","exceptions","unhandled","severityReason","file","method","normaliseFunctionName","code","inProject","fallback","getStacktrace","errorFramesToSkip","generatedFramesToSkip","ensureReport","reportOrError","_$BugsnagReport_9","num","size","s","substr","env","globalCount","mimeTypesLength","navigator","mimeTypes","clientId","userAgent","pow","fingerprint","_$cuid_29","__isoDate_10","Session","___classCallCheck_10","startedAt","_handled","_unhandled","events","handled","trackError","report","_$Session_10","_$isError_34","__map_2","__reduce_2","__includes_2","__isArray_2","noop","BugsnagClient","notifier","configSchema","___classCallCheck_2","version","url","_configured","_transport","sendSession","sendReport","_logger","debug","info","warn","plugins","beforeSession","BugsnagSession","configure","___extends_2","validity","use","plugin","init","transport","t","logger","l","sid","sessionDelegate","_sessionDelegate","startSession","crumb","notify","_normaliseError","normaliseError","_opts","originalSeverity","notifyArgs","hasNecessaryFields","_$BugsnagClient_2","_$throttle_8","maxEvents","refresh","_$config_11","location","host","collectUserIp","__map_13","__reduce_13","__filter_13","_$consoleBreadcrumbs_13","CONSOLE_LOG_METHODS","original","console","_len","_key","arg","stringified","apply","_restore","consoleBreadcrumbsEnabled","_$context_14","unshift","pathname","__isoDate_15","_$device_15","___extends_15","time","locale","browserLanguage","systemLanguage","userLanguage","language","__reduce_16","scriptStartRe","scriptEndRe","extractScriptContent","_$inlineScriptContent_16","html","DOMContentLoaded","getHtml","documentElement","outerHTML","originalLocation","href","onreadystatechange","readyState","htmlLines","_extractScriptContent","script","start","abs","content","startLine","end","_$interactionBreadcrumbs_17","addEventListener","event","targetText","targetSelector","getNodeText","target","interactionBreadcrumbsEnabled","text","textContent","innerText","_$ip_18","___extends_18","clientIp","_$navigationBreadcrumbs_19","drop","oldURL","from","relativeLocation","to","newURL","state","history","replaceState","wrapHistoryFn","pushState","navigationBreadcrumbsEnabled","a","createElement","search","hash","stateChangeToMetaData","title","currentPath","prevState","orig","_$networkBreadcrumbs_20","_client","monkeyPatchXMLHttpRequest","monkeyPatchFetch","networkBreadcrumbsEnabled","XMLHttpRequest","nativeOpen","open","removeEventListener","oldFetch","fetch","options","Promise","resolve","reject","then","response","handleFetchSuccess","handleFetchError","_$request_21","___extends_21","__map_22","__isArray_22","__includes_22","_$sessions_22","sessionClient","___extends_22","sessions","__map_23","strip","_$stripQueryString_23","___extends_23","_strip","__reduce_24","_listener","_$unhandledRejection_24","listener","reason","isBluebird","detail","fixBluebirdStacktrace","serializableReason","onunhandledrejection","promise","_ref","_$windowOnerror_25","prevOnError","onerror","messageOrEvent","lineNo","charNo","decorateStack","culprit","setFileName","setLineNumber","setColumnNumber","errorCharacter","_$stringify_33","_$payload_26","payload","__isoDate_27","matchPageProtocol","_$xDomainRequest_27","cb","protocol","encodeURIComponent","req","XDomainRequest","onload","responseText","setTimeout","send","_matchPageProtocol","pageProtocol","__isoDate_28","_$xmlHttpRequest_28","DONE","setRequestHeader","__map_12","__reduce_12","___extends_12","transports","_$browser_12","userPlugins","sessionTrackingEnabled","finalSchema","getPrefixedConsole","inferBreadcrumbSetting","consoleLog","consoleMethod","bind","defaultInDev","Bugsnag","Client","Report","Breadcrumb"],"mappings":"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","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.bugsnag = f()}})(function(){var define,module,exports;\n","/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\nvar fingerprint = require('./lib/fingerprint.js');\nvar pad = require('./lib/pad.js');\n\nvar c = 0,\n  blockSize = 4,\n  base = 36,\n  discreteValues = Math.pow(base, blockSize);\n\nfunction randomBlock () {\n  return pad((Math.random() *\n    discreteValues << 0)\n    .toString(base), blockSize);\n}\n\nfunction safeCounter () {\n  c = c < discreteValues ? c : 0;\n  c++; // this is not subliminal\n  return c - 1;\n}\n\nfunction cuid () {\n  // Starting with a lowercase letter makes\n  // it HTML element ID friendly.\n  var letter = 'c', // hard-coded allows for sequential access\n\n    // timestamp\n    // warning: this exposes the exact date and time\n    // that the uid was created.\n    timestamp = (new Date().getTime()).toString(base),\n\n    // Prevent same-machine collisions.\n    counter = pad(safeCounter().toString(base), blockSize),\n\n    // A few chars to generate distinct ids for different\n    // clients (so different computers are far less\n    // likely to generate the same id)\n    print = fingerprint(),\n\n    // Grab some more chars from Math.random()\n    random = randomBlock() + randomBlock();\n\n  return letter + timestamp + counter + print + random;\n}\n\ncuid.fingerprint = fingerprint;\n\nmodule.exports = cuid;\n","/*\n * Leaves breadcrumbs when the user interacts with the DOM\n */\nmodule.exports = {\n  init: (client) => {\n    if (!('addEventListener' in window)) return\n\n    window.addEventListener('click', (event) => {\n      let targetText, targetSelector\n      try {\n        targetText = getNodeText(event.target)\n        targetSelector = getNodeSelector(event.target)\n      } catch (e) {\n        targetText = '[hidden]'\n        targetSelector = '[hidden]'\n        client._logger.error('Cross domain error when tracking click event. See https://docs.bugsnag.com/platforms/browsers/faq/#3-cross-origin-script-errors')\n      }\n      client.leaveBreadcrumb('UI click', { targetText, targetSelector }, 'user')\n    }, true)\n  },\n  configSchema: {\n    interactionBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: '(boolean) interactionBreadcrumbsEnabled should be true or false'\n    }\n  }\n}\n\n// extract text content from a element\nconst getNodeText = el => {\n  let text = el.textContent || el.innerText || ''\n  if (!text && (el.type === 'submit' || el.type === 'button')) text = el.value\n  text = text.replace(/^\\s+|\\s+$/g, '') // trim whitespace\n  return truncate(text, 140)\n}\n\n// Create a label from tagname, id and css class of the element\nfunction getNodeSelector (el) {\n  const parts = [ el.tagName ]\n  if (el.id) parts.push('#' + el.id)\n  if (el.className && el.className.length) parts.push(`.${el.className.split(' ').join('.')}`)\n  // Can't get much more advanced with the current browser\n  if (!document.querySelectorAll || !Array.prototype.indexOf) return parts.join('')\n  try {\n    if (document.querySelectorAll(parts.join('')).length === 1) return parts.join('')\n  } catch (e) {\n    // Sometimes the query selector can be invalid just return it as-is\n    return parts.join('')\n  }\n  // try to get a more specific selector if this one matches more than one element\n  if (el.parentNode.childNodes.length > 1) {\n    const index = Array.prototype.indexOf.call(el.parentNode.childNodes, el) + 1\n    parts.push(`:nth-child(${index})`)\n  }\n  if (document.querySelectorAll(parts.join('')).length === 1) return parts.join('')\n  // try prepending the parent node selector\n  if (el.parentNode) return `${getNodeSelector(el.parentNode)} > ${parts.join('')}`\n  return parts.join('')\n}\n\nfunction truncate (value, length) {\n  const ommision = '(...)'\n  if (value && value.length <= length) return value\n  return value.slice(0, length - ommision.length) + ommision\n}\n","const BREADCRUMB_TYPE = 'network'\n\n// keys to safely store metadata on the request object\nconst REQUEST_SETUP_KEY = 'BUGSNAG:SETUP'\nconst REQUEST_URL_KEY = 'BUGSNAG:REQUEST_URL'\nconst REQUEST_METHOD_KEY = 'BUGSNAG:REQUEST_METHOD'\n\nlet restoreFunctions = []\nlet client\n\n/*\n * Leaves breadcrumbs when network requests occur\n */\nexports.init = (_client) => {\n  client = _client\n  monkeyPatchXMLHttpRequest()\n  monkeyPatchFetch()\n}\n\nexports.configSchema = {\n  networkBreadcrumbsEnabled: {\n    defaultValue: () => undefined,\n    validate: (value) => value === true || value === false || value === undefined,\n    message: '(boolean) networkBreadcrumbsEnabled should be true or false'\n  }\n}\n\nif (\"production\" !== 'production') {\n  exports.destroy = () => {\n    restoreFunctions.forEach(fn => fn())\n    restoreFunctions = []\n  }\n}\n\n// XMLHttpRequest monkey patch\nconst monkeyPatchXMLHttpRequest = () => {\n  if (!('addEventListener' in window.XMLHttpRequest.prototype)) return\n  const nativeOpen = window.XMLHttpRequest.prototype.open\n\n  // override native open()\n  window.XMLHttpRequest.prototype.open = function open (method, url) {\n    // store url and HTTP method for later\n    this[REQUEST_URL_KEY] = url\n    this[REQUEST_METHOD_KEY] = method\n\n    // if we have already setup listeners, it means open() was called twice, we need to remove\n    // the listeners and recreate them\n    if (this[REQUEST_SETUP_KEY]) {\n      this.removeEventListener('load', handleXHRLoad)\n      this.removeEventListener('error', handleXHRError)\n    }\n\n    // attach load event listener\n    this.addEventListener('load', handleXHRLoad)\n    // attach error event listener\n    this.addEventListener('error', handleXHRError)\n\n    this[REQUEST_SETUP_KEY] = true\n\n    nativeOpen.apply(this, arguments)\n  }\n\n  if (\"production\" !== 'production') {\n    restoreFunctions.push(() => {\n      window.XMLHttpRequest.prototype.open = nativeOpen\n    })\n  }\n}\n\nfunction handleXHRLoad () {\n  if (\n    this[REQUEST_URL_KEY] === client.config.endpoint ||\n    this[REQUEST_URL_KEY] === client.config.sessionEndpoint\n  ) {\n    // don't leave a network breadcrumb from bugsnag notify calls\n    return\n  }\n  const metaData = {\n    status: this.status,\n    request: `${this[REQUEST_METHOD_KEY]} ${this[REQUEST_URL_KEY]}`\n  }\n  if (this.status >= 400) {\n    // contacted server but got an error response\n    client.leaveBreadcrumb('XMLHttpRequest failed', metaData, BREADCRUMB_TYPE)\n  } else {\n    client.leaveBreadcrumb('XMLHttpRequest succeeded', metaData, BREADCRUMB_TYPE)\n  }\n}\n\nfunction handleXHRError () {\n  if (\n    this[REQUEST_URL_KEY] === client.config.endpoint ||\n    this[REQUEST_URL_KEY] === client.config.sessionEndpoint\n  ) {\n    // don't leave a network breadcrumb from bugsnag notify calls\n    return\n  }\n  // failed to contact server\n  client.leaveBreadcrumb('XMLHttpRequest error', {\n    request: `${this[REQUEST_METHOD_KEY]} ${this[REQUEST_URL_KEY]}`\n  }, BREADCRUMB_TYPE)\n}\n\n// window.fetch monkey patch\nconst monkeyPatchFetch = () => {\n  if (!('fetch' in window)) return\n\n  const oldFetch = window.fetch\n  window.fetch = function fetch (...args) {\n    let [url, options] = args\n    let method = 'GET'\n    if (options && options.method) {\n      method = options.method\n    }\n    return new Promise((resolve, reject) => {\n      // pass through to native fetch\n      oldFetch(...args)\n        .then(response => {\n          handleFetchSuccess(response, method, url)\n          resolve(response)\n        })\n        .catch(error => {\n          handleFetchError(method, url)\n          reject(error)\n        })\n    })\n  }\n\n  if (\"production\" !== 'production') {\n    restoreFunctions.push(() => {\n      window.fetch = oldFetch\n    })\n  }\n}\n\nconst handleFetchSuccess = (response, method, url) => {\n  const metaData = {\n    status: response.status,\n    request: `${method} ${url}`\n  }\n  if (response.status >= 400) {\n    // when the request comes back with a 4xx or 5xx status it does not reject the fetch promise,\n    client.leaveBreadcrumb('fetch() failed', metaData, BREADCRUMB_TYPE)\n  } else {\n    client.leaveBreadcrumb('fetch() succeeded', metaData, BREADCRUMB_TYPE)\n  }\n}\n\nconst handleFetchError = (method, url) => {\n  client.leaveBreadcrumb('fetch() error', { request: `${method} ${url}` }, BREADCRUMB_TYPE)\n}\n","module.exports = stringify\nstringify.default = stringify\nfunction stringify (obj) {\n  decirc(obj, '', [], null)\n  return JSON.stringify(obj)\n}\nfunction Circle (val, k, parent) {\n  this.val = val\n  this.k = k\n  this.parent = parent\n  this.count = 1\n}\nCircle.prototype.toJSON = function toJSON () {\n  if (--this.count === 0) {\n    this.parent[this.k] = this.val\n  }\n  return '[Circular]'\n}\nfunction decirc (val, k, stack, parent) {\n  if (typeof val === 'object' && val !== null) {\n    if (typeof val.toJSON === 'function') {\n      if (val instanceof Circle) {\n        val.count++\n        return\n      }\n      if (val.toJSON.forceDecirc === undefined) {\n        return\n      }\n    }\n    for (var i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        parent[k] = new Circle(val, k, parent)\n        return\n      }\n    }\n    stack.push(val)\n    for (var key in val) {\n      if (Object.prototype.hasOwnProperty.call(val, key)) {\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n","// minimal implementations of useful ES functionality\n\n// all we really need for arrays is reduce – everything else is just sugar!\n\n// Array#reduce\nconst reduce = (arr, fn, accum) => {\n  let val = accum\n  for (let i = 0, len = arr.length; i < len; i++) val = fn(val, arr[i], i, arr)\n  return val\n}\n\n// Array#filter\nconst filter = (arr, fn) =>\n  reduce(arr, (accum, item, i, arr) => !fn(item, i, arr) ? accum : accum.concat(item), [])\n\n// Array#map\nconst map = (arr, fn) =>\n  reduce(arr, (accum, item, i, arr) => accum.concat(fn(item, i, arr)), [])\n\n// Array#includes\nconst includes = (arr, x) =>\n  reduce(arr, (accum, item, i, arr) => accum === true || item === x, false)\n\nconst _hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString')\nconst _dontEnums = [\n  'toString', 'toLocaleString', 'valueOf', 'hasOwnProperty',\n  'isPrototypeOf', 'propertyIsEnumerable', 'constructor'\n]\n\n// Object#keys\nconst keys = obj => {\n  // stripped down version of\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/Keys\n  const result = []\n  let prop\n  for (prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) result.push(prop)\n  }\n  if (!_hasDontEnumBug) return result\n  for (let i = 0, len = _dontEnums.length; i < len; i++) {\n    if (Object.prototype.hasOwnProperty.call(obj, _dontEnums[i])) result.push(_dontEnums[i])\n  }\n  return result\n}\n\n// Array#isArray\nconst isArray = obj => Object.prototype.toString.call(obj) === '[object Array]'\n\nconst _pad = n => n < 10 ? `0${n}` : n\n\n// Date#toISOString\nconst isoDate = () => {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\n  const d = new Date()\n  return d.getUTCFullYear() +\n    '-' + _pad(d.getUTCMonth() + 1) +\n    '-' + _pad(d.getUTCDate()) +\n    'T' + _pad(d.getUTCHours()) +\n    ':' + _pad(d.getUTCMinutes()) +\n    ':' + _pad(d.getUTCSeconds()) +\n    '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n    'Z'\n}\n\nmodule.exports = { map, reduce, filter, includes, keys, isArray, isoDate }\n","const { isoDate } = require('./lib/es-utils')\n\nclass BugsnagBreadcrumb {\n  constructor (name = '[anonymous]', metaData = {}, type = 'manual', timestamp = isoDate()) {\n    this.type = type\n    this.name = name\n    this.metaData = metaData\n    this.timestamp = timestamp\n  }\n\n  toJSON () {\n    return {\n      type: this.type,\n      name: this.name,\n      timestamp: this.timestamp,\n      metaData: this.metaData\n    }\n  }\n}\n\n// force `fast-safe-stringify` to do its thing\n// https://github.com/davidmarkclements/fast-safe-stringify#tojson-support\nBugsnagBreadcrumb.prototype.toJSON.forceDecirc = true\n\nmodule.exports = BugsnagBreadcrumb\n","const { includes } = require('./es-utils')\n\nmodule.exports = value =>\n  includes([ 'undefined', 'number' ], typeof value) &&\n  parseInt('' + value, 10) === value &&\n  value > 0\n","const { filter, reduce, keys, isArray } = require('./lib/es-utils')\nconst positiveIntIfDefined = require('./lib/positive-int-check')\n\nmodule.exports.schema = {\n  apiKey: {\n    defaultValue: () => null,\n    message: '(string) apiKey is required',\n    validate: value => typeof value === 'string' && value.length\n  },\n  appVersion: {\n    defaultValue: () => null,\n    message: '(string) appVersion should have a value if supplied',\n    validate: value => value === null || (typeof value === 'string' && value.length)\n  },\n  autoNotify: {\n    defaultValue: () => true,\n    message: '(boolean) autoNotify should be true or false',\n    validate: value => value === true || value === false\n  },\n  beforeSend: {\n    defaultValue: () => [],\n    message: '(array[Function]) beforeSend should only contain functions',\n    validate: value => typeof value === 'function' || (isArray(value) && filter(value, f => typeof f === 'function').length === value.length)\n  },\n  endpoint: {\n    defaultValue: () => 'https://notify.bugsnag.com',\n    message: '(string) endpoint should be set',\n    validate: () => true\n  },\n  sessionEndpoint: {\n    defaultValue: () => 'https://sessions.bugsnag.com',\n    message: '(string) sessionEndpoint should be set',\n    validate: () => true\n  },\n  autoCaptureSessions: {\n    defaultValue: () => false,\n    message: '(boolean) autoCaptureSessions should be true/false',\n    validate: val => val === true || val === false\n  },\n  notifyReleaseStages: {\n    defaultValue: () => null,\n    message: '(array[string]) notifyReleaseStages should only contain strings',\n    validate: value => value === null || (isArray(value) && filter(value, f => typeof f === 'string').length === value.length)\n  },\n  releaseStage: {\n    defaultValue: () => 'production',\n    message: '(string) releaseStage should be set',\n    validate: value => typeof value === 'string' && value.length\n  },\n  maxBreadcrumbs: {\n    defaultValue: () => 20,\n    message: '(number) maxBreadcrumbs must be a number (≤40) if specified',\n    validate: value => value === 0 || (positiveIntIfDefined(value) && (value === undefined || value <= 40))\n  },\n  autoBreadcrumbs: {\n    defaultValue: () => true,\n    message: '(boolean) autoBreadcrumbs should be true or false',\n    validate: (value) => typeof value === 'boolean'\n  },\n  user: {\n    defaultValue: () => null,\n    message: '(object) user should be an object',\n    validate: (value) => typeof value === 'object'\n  },\n  metaData: {\n    defaultValue: () => null,\n    message: '(object) metaData should be an object',\n    validate: (value) => typeof value === 'object'\n  }\n}\n\nmodule.exports.mergeDefaults = (opts, schema) => {\n  if (!opts || !schema) throw new Error('schema.mergeDefaults(opts, schema): opts and schema objects are required')\n  return reduce(keys(schema), (accum, key) => {\n    accum[key] = opts[key] !== undefined ? opts[key] : schema[key].defaultValue()\n    return accum\n  }, {})\n}\n\nmodule.exports.validate = (opts, schema) => {\n  if (!opts || !schema) throw new Error('schema.mergeDefaults(opts, schema): opts and schema objects are required')\n  const errors = reduce(keys(schema), (accum, key) => {\n    if (schema[key].validate(opts[key])) return accum\n    return accum.concat({ key, message: schema[key].message, value: opts[key] })\n  }, [])\n  return { valid: !errors.length, errors }\n}\n","module.exports = client =>\n  client.app && typeof client.app.releaseStage === 'string'\n    ? client.app.releaseStage\n    : client.config.releaseStage\n","// Given `err` which may be an error, does it have a stack property which is a string?\nmodule.exports = err =>\n  !!err &&\n  (!!err.stack || !!err.stacktrace || !!err['opera#sourceloc']) &&\n  typeof (err.stack || err.stacktrace || err['opera#sourceloc']) === 'string'\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (obj instanceof Object) {\n            for (var i = 0; i < props.length; i++) {\n                if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                    this['set' + _capitalize(props[i])](obj[props[i]]);\n                }\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function(StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                if (!curr['arguments']) {\n                  break;\n                }\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for (var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n","const ErrorStackParser = require('error-stack-parser')\nconst StackGenerator = require('stack-generator')\nconst hasStack = require('./lib/has-stack')\nconst { reduce, filter } = require('./lib/es-utils')\n\nclass BugsnagReport {\n  constructor (errorClass, errorMessage, stacktrace = [], handledState = defaultHandledState()) {\n    // duck-typing ftw >_<\n    this.__isBugsnagReport = true\n\n    this._ignored = false\n\n    // private (un)handled state\n    this._handledState = handledState\n\n    // setable props\n    this.app = undefined\n    this.apiKey = undefined\n    this.breadcrumbs = []\n    this.context = undefined\n    this.device = undefined\n    this.errorClass = stringOrFallback(errorClass, '[no error class]')\n    this.errorMessage = stringOrFallback(errorMessage, '[no error message]')\n    this.groupingHash = undefined\n    this.metaData = {}\n    this.request = undefined\n    this.severity = this._handledState.severity\n    this.stacktrace = reduce(stacktrace, (accum, frame) => {\n      const f = formatStackframe(frame)\n      // don't include a stackframe if none of its properties are defined\n      try {\n        if (JSON.stringify(f) === '{}') return accum\n        return accum.concat(f)\n      } catch (e) {\n        return accum\n      }\n    }, [])\n    this.user = undefined\n    this.session = undefined\n  }\n\n  ignore () {\n    this._ignored = true\n  }\n\n  isIgnored () {\n    return this._ignored\n  }\n\n  updateMetaData (section, ...args) {\n    if (!section) return this\n    let updates\n\n    // updateMetaData(\"section\", null) -> removes section\n    if (args[0] === null) return this.removeMetaData(section)\n\n    // updateMetaData(\"section\", \"property\", null) -> removes property from section\n    if (args[1] === null) return this.removeMetaData(section, args[0], args[1])\n\n    // normalise the two supported input types into object form\n    if (typeof args[0] === 'object') updates = args[0]\n    if (typeof args[0] === 'string') updates = { [args[0]]: args[1] }\n\n    // exit if we don't have an updates object at this point\n    if (!updates) return this\n\n    // ensure a section with this name exists\n    if (!this.metaData[section]) this.metaData[section] = {}\n\n    // merge the updates with the existing section\n    this.metaData[section] = { ...this.metaData[section], ...updates }\n\n    return this\n  }\n\n  removeMetaData (section, property) {\n    if (typeof section !== 'string') return this\n\n    // remove an entire section\n    if (!property) {\n      delete this.metaData[section]\n      return this\n    }\n\n    // remove a single property from a section\n    if (this.metaData[section]) {\n      delete this.metaData[section][property]\n      return this\n    }\n\n    return this\n  }\n\n  toJSON () {\n    return {\n      payloadVersion: '4',\n      exceptions: [\n        {\n          errorClass: this.errorClass,\n          message: this.errorMessage,\n          stacktrace: this.stacktrace,\n          type: 'browserjs'\n        }\n      ],\n      severity: this.severity,\n      unhandled: this._handledState.unhandled,\n      severityReason: this._handledState.severityReason,\n      app: this.app,\n      device: this.device,\n      breadcrumbs: this.breadcrumbs,\n      context: this.context,\n      user: this.user,\n      metaData: this.metaData,\n      groupingHash: this.groupingHash,\n      request: this.request,\n      session: this.session\n    }\n  }\n}\n\n// force `fast-safe-stringify` to do its thing\n// https://github.com/davidmarkclements/fast-safe-stringify#tojson-support\nBugsnagReport.prototype.toJSON.forceDecirc = true\n\n// takes a stacktrace.js style stackframe (https://github.com/stacktracejs/stackframe)\n// and returns a Bugsnag compatible stackframe (https://docs.bugsnag.com/api/error-reporting/#json-payload)\nconst formatStackframe = frame => {\n  const f = {\n    file: frame.fileName,\n    method: normaliseFunctionName(frame.functionName),\n    lineNumber: frame.lineNumber,\n    columnNumber: frame.columnNumber,\n    code: undefined,\n    inProject: undefined\n  }\n  // Some instances result in no file:\n  // - calling notify() from chrome's terminal results in no file/method.\n  // - non-error exception thrown from global code in FF\n  // This adds one.\n  if (f.lineNumber > -1 && !f.file && !f.method) {\n    f.file = 'global code'\n  }\n  return f\n}\n\nconst normaliseFunctionName = name => /^global code$/i.test(name) ? 'global code' : name\n\nconst defaultHandledState = () => ({\n  unhandled: false,\n  severity: 'warning',\n  severityReason: { type: 'handledException' }\n})\n\nconst stringOrFallback = (str, fallback) => typeof str === 'string' && str ? str : fallback\n\n// Helpers\n\nBugsnagReport.getStacktrace = (error, errorFramesToSkip = 0, generatedFramesToSkip = 0) => {\n  if (hasStack(error)) return ErrorStackParser.parse(error).slice(errorFramesToSkip)\n  // error wasn't provided or didn't have a stacktrace so try to walk the callstack\n  return filter(StackGenerator.backtrace(), frame =>\n    (frame.functionName || '').indexOf('StackGenerator$$') === -1\n  ).slice(1 + generatedFramesToSkip)\n}\n\nBugsnagReport.ensureReport = function (reportOrError, errorFramesToSkip = 0, generatedFramesToSkip = 0) {\n  // notify() can be called with a Report object. In this case no action is required\n  if (reportOrError.__isBugsnagReport) return reportOrError\n  try {\n    const stacktrace = BugsnagReport.getStacktrace(reportOrError, errorFramesToSkip, 1 + generatedFramesToSkip)\n    return new BugsnagReport(reportOrError.name, reportOrError.message, stacktrace)\n  } catch (e) {\n    return new BugsnagReport(reportOrError.name, reportOrError.message, [])\n  }\n}\n\nmodule.exports = BugsnagReport\n","module.exports = function pad (num, size) {\n  var s = '000000000' + num;\n  return s.substr(s.length - size);\n};\n","var pad = require('./pad.js');\n\nvar env = typeof window === 'object' ? window : self;\nvar globalCount = 0;\nfor (var prop in env) {\n  if (Object.hasOwnProperty.call(env, prop)) globalCount++;\n}\nvar mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;\nvar clientId = pad((mimeTypesLength +\n  navigator.userAgent.length).toString(36) +\n  globalCount.toString(36), 4);\n\nmodule.exports = function fingerprint () {\n  return clientId;\n};\n","const { isoDate } = require('./lib/es-utils')\nconst cuid = require('@bugsnag/cuid')\n\nclass Session {\n  constructor () {\n    this.id = cuid()\n    this.startedAt = isoDate()\n    this._handled = 0\n    this._unhandled = 0\n  }\n  toJSON () {\n    return {\n      id: this.id,\n      startedAt: this.startedAt,\n      events: { handled: this._handled, unhandled: this._unhandled }\n    }\n  }\n  trackError (report) {\n    this[report._handledState.unhandled ? '_unhandled' : '_handled'] += 1\n  }\n}\n\n// force `fast-safe-stringify` to do its thing\n// https://github.com/davidmarkclements/fast-safe-stringify#tojson-support\nSession.prototype.toJSON.forceDecirc = true\n\nmodule.exports = Session\n","\n/**\n * Expose `isError`.\n */\n\nmodule.exports = isError;\n\n/**\n * Test whether `value` is error object.\n *\n * @param {*} value\n * @returns {boolean}\n */\n\nfunction isError(value) {\n  switch (Object.prototype.toString.call(value)) {\n    case '[object Error]': return true;\n    case '[object Exception]': return true;\n    case '[object DOMException]': return true;\n    default: return value instanceof Error;\n  }\n}\n","const config = require('./config')\nconst BugsnagReport = require('./report')\nconst BugsnagBreadcrumb = require('./breadcrumb')\nconst BugsnagSession = require('./session')\nconst { map, reduce, includes, isArray } = require('./lib/es-utils')\nconst inferReleaseStage = require('./lib/infer-release-stage')\nconst isError = require('iserror')\n\nconst noop = () => {}\n\nclass BugsnagClient {\n  constructor (notifier, configSchema = config.schema, session = null) {\n    if (!notifier) throw new Error('new BugsnagClient(notifier, configSchema) requires `notifier` argument')\n    if (!notifier.name || !notifier.version || !notifier.url) {\n      throw new Error('new BugsnagClient(notifier, configSchema) - `notifier` requires: `{ name, version, url }`')\n    }\n\n    // notifier id\n    this.notifier = notifier\n\n    // config\n    this.configSchema = configSchema\n\n    // configure() should be called before notify()\n    this._configured = false\n\n    // i/o\n    this._transport = { name: 'NULL_TRANSPORT', sendSession: noop, sendReport: noop }\n    this._logger = { debug: noop, info: noop, warn: noop, error: noop }\n\n    // plugins\n    this.plugins = []\n\n    this.session = session\n    this.beforeSession = []\n\n    this.breadcrumbs = []\n\n    // setable props\n    this.app = {}\n    this.context = undefined\n    this.device = undefined\n    this.metaData = undefined\n    this.request = undefined\n    this.user = {}\n\n    // expose internal constructors\n    this.BugsnagReport = BugsnagReport\n    this.BugsnagBreadcrumb = BugsnagBreadcrumb\n    this.BugsnagSession = BugsnagSession\n  }\n\n  configure (opts = {}) {\n    this.config = config.mergeDefaults({ ...this.config, ...opts }, this.configSchema)\n    const validity = config.validate(this.config, this.configSchema)\n    if (!validity.valid === true) {\n      const err = new Error('Bugsnag configuration error')\n      err.errors = map(validity.errors, (err) => `${err.key} ${err.message} \\n  ${err.value}`)\n      throw err\n    }\n    if (typeof this.config.beforeSend === 'function') this.config.beforeSend = [ this.config.beforeSend ]\n    if (this.config.appVersion !== null) this.app.version = this.config.appVersion\n    if (this.config.metaData) this.metaData = this.config.metaData\n    if (this.config.user) this.user = this.config.user\n    this._configured = true\n    this._logger.debug(`Loaded!`)\n    return this\n  }\n\n  use (plugin) {\n    this.plugins.push(plugin)\n    return plugin.init(this)\n  }\n\n  transport (t) {\n    this._transport = t\n    return this\n  }\n\n  logger (l, sid) {\n    this._logger = l\n    return this\n  }\n\n  sessionDelegate (s) {\n    this._sessionDelegate = s\n    return this\n  }\n\n  startSession () {\n    if (!this._sessionDelegate) {\n      this._logger.warn('No session implementation is installed')\n      return this\n    }\n    return this._sessionDelegate.startSession(this)\n  }\n\n  leaveBreadcrumb (name, metaData, type, timestamp) {\n    if (!this._configured) throw new Error('Bugsnag must be configured before calling leaveBreadcrumb()')\n\n    // coerce bad values so that the defaults get set\n    name = name || undefined\n    type = typeof type === 'string' ? type : undefined\n    timestamp = typeof timestamp === 'string' ? timestamp : undefined\n    metaData = typeof metaData === 'object' && metaData !== null ? metaData : undefined\n\n    // if no name and no metaData, usefulness of this crumb is questionable at best so discard\n    if (typeof name !== 'string' && !metaData) return\n\n    const crumb = new BugsnagBreadcrumb(name, metaData, type, timestamp)\n\n    // push the valid crumb onto the queue and maintain the length\n    this.breadcrumbs.push(crumb)\n    if (this.breadcrumbs.length > this.config.maxBreadcrumbs) {\n      this.breadcrumbs = this.breadcrumbs.slice(this.breadcrumbs.length - this.config.maxBreadcrumbs)\n    }\n\n    return this\n  }\n\n  notify (error, opts = {}) {\n    if (!this._configured) throw new Error('Bugsnag must be configured before calling report()')\n\n    // releaseStage can be set via config.releaseStage or client.app.releaseStage\n    const releaseStage = inferReleaseStage(this)\n\n    // ensure we have an error (or a reasonable object representation of an error)\n    let { err, errorFramesToSkip, _opts } = normaliseError(error, opts, this._logger)\n    if (_opts) opts = _opts\n\n    // if we have something falsey at this point, report usage error\n    if (!err) {\n      this._logger.warn(`Usage error. notify() called with no \"error\" parameter`)\n      err = new Error('Bugsnag usage error. notify() called with no \"error\" parameter')\n    }\n\n    // ensure opts is an object\n    if (typeof opts !== 'object' || opts === null) opts = {}\n\n    // create a report from the error, if it isn't one already\n    const report = BugsnagReport.ensureReport(err, errorFramesToSkip, 1)\n\n    report.app = { ...{ releaseStage }, ...report.app, ...this.app }\n    report.context = report.context || opts.context || this.context || undefined\n    report.device = { ...report.device, ...this.device, ...opts.device }\n    report.request = { ...report.request, ...this.request, ...opts.request }\n    report.user = { ...report.user, ...this.user, ...opts.user }\n    report.metaData = { ...report.metaData, ...this.metaData, ...opts.metaData }\n    report.breadcrumbs = this.breadcrumbs.slice(0)\n\n    if (this.session) {\n      this.session.trackError(report)\n      report.session = this.session\n    }\n\n    // set severity if supplied\n    if (opts.severity !== undefined) {\n      report.severity = opts.severity\n      report._handledState.severityReason = { type: 'userSpecifiedSeverity' }\n    }\n\n    // exit early if the reports should not be sent on the current releaseStage\n    if (isArray(this.config.notifyReleaseStages) && !includes(this.config.notifyReleaseStages, releaseStage)) {\n      this._logger.warn(`Report not sent due to releaseStage/notifyReleaseStages configuration`)\n      return false\n    }\n\n    const originalSeverity = report.severity\n\n    const beforeSend = [].concat(opts.beforeSend).concat(this.config.beforeSend)\n    const preventSend = reduce(beforeSend, (accum, fn) => {\n      if (accum === true) return true\n      if (typeof fn === 'function' && fn(report) === false) return true\n      if (report.isIgnored()) return true\n      return false\n    }, false)\n\n    if (preventSend) {\n      this._logger.debug(`Report not sent due to beforeSend callback`)\n      return false\n    }\n\n    // only leave a crumb for the error if actually got sent\n    if (this.config.autoBreadcrumbs) {\n      this.leaveBreadcrumb(report.errorClass, {\n        errorClass: report.errorClass,\n        errorMessage: report.errorMessage,\n        severity: report.severity,\n        stacktrace: report.stacktrace\n      }, 'error')\n    }\n\n    if (originalSeverity !== report.severity) {\n      report._handledState.severityReason = { type: 'userCallbackSetSeverity' }\n    }\n\n    this._transport.sendReport(this._logger, this.config, {\n      apiKey: report.apiKey || this.config.apiKey,\n      notifier: this.notifier,\n      events: [ report ]\n    })\n\n    return true\n  }\n}\n\nconst normaliseError = (error, opts, logger) => {\n  let err\n  let errorFramesToSkip = 0\n  let _opts\n  switch (typeof error) {\n    case 'string':\n      if (typeof opts === 'string') {\n        // ≤v3 used to have a notify('ErrorName', 'Error message') interface\n        // report usage/deprecation errors if this function is called like that\n        logger.warn(`Usage error. notify() called with (string, string) but expected (error, object)`)\n        err = new Error('Bugsnag usage error. notify() called with (string, string) but expected (error, object)')\n        _opts = { metaData: { notifier: { notifyArgs: [ error, opts ] } } }\n      } else {\n        err = new Error(String(error))\n        errorFramesToSkip += 2\n      }\n      break\n    case 'number':\n    case 'boolean':\n      err = new Error(String(error))\n      break\n    case 'function':\n      logger.warn(`Usage error. notify() called with a function as \"error\" parameter`)\n      err = new Error('Bugsnag usage error. notify() called with a function as \"error\" parameter')\n      break\n    case 'object':\n      if (error !== null && (isError(error) || error.__isBugsnagReport)) {\n        err = error\n      } else if (error !== null && hasNecessaryFields(error)) {\n        err = new Error(error.message || error.errorMessage)\n        err.name = error.name || error.errorClass\n        errorFramesToSkip += 2\n      } else {\n        logger.warn(`Usage error. notify() called with an unsupported object as \"error\" parameter. Supply an Error or { name, message } object.`)\n        err = new Error('Bugsnag usage error. notify() called with an unsupported object as \"error\" parameter. Supply an Error or { name, message } object.')\n      }\n      break\n  }\n  return { err, errorFramesToSkip, _opts }\n}\n\nconst hasNecessaryFields = error =>\n  (typeof error.name === 'string' || typeof error.errorClass === 'string') &&\n  (typeof error.message === 'string' || typeof error.errorMessage === 'string')\n\nmodule.exports = BugsnagClient\n","const positiveIntIfDefined = require('../lib/positive-int-check')\n\n/*\n * Throttles and dedupes error reports\n */\n\nmodule.exports = {\n  init: (client) => {\n    // track sent events for each init of the plugin\n    let n = 0\n\n    // add beforeSend hook\n    client.config.beforeSend.push((report) => {\n      // have max events been sent already?\n      if (n >= client.config.maxEvents) return report.ignore()\n      n++\n    })\n\n    client.refresh = () => { n = 0 }\n  },\n  configSchema: {\n    maxEvents: {\n      defaultValue: () => 10,\n      message: '(number) maxEvents must be a positive integer ≤100',\n      validate: val => positiveIntIfDefined(val) && val < 100\n    }\n  }\n}\n","module.exports = {\n  releaseStage: {\n    defaultValue: () => {\n      if (/^localhost(:\\d+)?$/.test(window.location.host)) return 'development'\n      return 'production'\n    },\n    message: '(string) releaseStage should be set',\n    validate: value => typeof value === 'string' && value.length\n  },\n  collectUserIp: {\n    defaultValue: () => true,\n    message: '(boolean) collectUserIp should true/false',\n    validate: value => value === true || value === false\n  }\n}\n","const { map, reduce, filter } = require('../../base/lib/es-utils')\n\n/*\n * Leaves breadcrumbs when console log methods are called\n */\nexports.init = (client) => {\n  map(CONSOLE_LOG_METHODS, method => {\n    const original = console[method]\n    console[method] = (...args) => {\n      client.leaveBreadcrumb('Console output', reduce(args, (accum, arg, i) => {\n        // do the best/simplest stringification of each argument\n        let stringified = String(arg)\n        // if it stringifies to [object Object] attempt to JSON stringify\n        if (stringified === '[object Object]') {\n          // catch stringify errors and fallback to [object Object]\n          try { stringified = JSON.stringify(arg) } catch (e) {}\n        }\n        accum[`[${i}]`] = stringified\n        return accum\n      }, {\n        severity: method.indexOf('group') === 0 ? 'log' : method\n      }), 'log')\n      original.apply(console, args)\n    }\n    console[method]._restore = () => { console[method] = original }\n  })\n}\n\nexports.configSchema = {\n  consoleBreadcrumbsEnabled: {\n    defaultValue: () => undefined,\n    validate: (value) => value === true || value === false || value === undefined,\n    message: '(boolean) consoleBreadcrumbsEnabled should be true or false'\n  }\n}\n\nif (\"production\" !== 'production') {\n  exports.destroy = () => CONSOLE_LOG_METHODS.forEach(method => {\n    if (typeof console[method]._restore === 'function') console[method]._restore()\n  })\n}\n\nconst CONSOLE_LOG_METHODS = filter([ 'log', 'debug', 'info', 'warn', 'error' ], method =>\n  typeof console !== 'undefined' && typeof console[method] === 'function'\n)\n","/*\n * Sets the default context to be the current URL\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift(report => {\n      if (report.context) return\n      report.context = window.location.pathname\n    })\n  }\n}\n","const { isoDate } = require('../../base/lib/es-utils')\n/*\n * Automatically detects browser device details\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift((report) => {\n      report.device = {\n        ...{\n          time: isoDate(),\n          locale: navigator.browserLanguage || navigator.systemLanguage || navigator.userLanguage || navigator.language,\n          userAgent: navigator.userAgent\n        },\n        ...report.device\n      }\n    })\n\n    client.beforeSession.push(session => { session.device = { userAgent: navigator.userAgent } })\n  }\n}\n","const { reduce } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  init: (client) => {\n    let html = ''\n    let DOMContentLoaded = false\n    const getHtml = () => document.documentElement.outerHTML\n    const originalLocation = window.location.href\n\n    const addInlineContent = report => {\n      const frame = report.stacktrace[0]\n      if (!frame || !frame.file || !frame.lineNumber) return frame\n      if (frame.file.replace(/#.*$/, '') !== originalLocation.replace(/#.*$/, '')) return frame\n      if (!DOMContentLoaded || !html) html = getHtml()\n      const htmlLines = [ '<!-- DOCUMENT START -->' ].concat(html.split('\\n'))\n      const { script, start } = extractScriptContent(htmlLines, frame.lineNumber - 1)\n      const code = reduce(script, (accum, line, i) => {\n        if (Math.abs((start + i + 1) - frame.lineNumber) > 10) return accum\n        accum[`${start + i + 1}`] = line\n        return accum\n      }, {})\n      frame.code = code\n      report.updateMetaData('script', { content: script.join('\\n') })\n    }\n\n    // get whatever HTML exists at this point in time\n    html = getHtml()\n\n    // then update it when the DOM content has loaded\n    document.onreadystatechange = () => {\n      // IE8 compatible alternative to document#DOMContentLoaded\n      if (document.readyState === 'interactive') {\n        html = getHtml()\n        DOMContentLoaded = true\n      }\n    }\n\n    client.config.beforeSend.unshift(addInlineContent)\n  }\n}\n\nconst scriptStartRe = /^.*<script.*?>/\nconst scriptEndRe = /<\\/script>.*$/\nconst extractScriptContent = module.exports.extractScriptContent = (lines, startLine) => {\n  // search down for </script>\n  let line = startLine\n  while (line < lines.length && !scriptEndRe.test(lines[line])) line++\n\n  // search up for <script>\n  const end = line\n  while (line > 0 && !scriptStartRe.test(lines[line])) line--\n  const start = line\n\n  // strip <script> tags so that lines just contain js content\n  const script = lines.slice(start, end + 1)\n  script[0] = script[0].replace(scriptStartRe, '')\n  script[script.length - 1] = script[script.length - 1].replace(scriptEndRe, '')\n\n  // return the array of lines, and the line number the script started at\n  return { script, start }\n}\n","/*\n * Prevent collection of user IPs\n */\nmodule.exports = {\n  init: (client) => {\n    if (client.config.collectUserIp) return\n    client.config.beforeSend.push(report => {\n      report.user = { id: '[NOT COLLECTED]', ...report.user }\n      report.request = { clientIp: '[NOT COLLECTED]', ...report.request }\n    })\n  }\n}\n","/*\n * Leaves breadcrumbs when navigation methods are called or events are emitted\n */\nexports.init = (client) => {\n  if (!('addEventListener' in window)) return\n\n  // returns a function that will drop a breadcrumb with a given name\n  const drop = name => () => client.leaveBreadcrumb(name, {}, 'navigation')\n\n  // simple drops – just names, no meta\n  window.addEventListener('pagehide', drop('Page hidden'), true)\n  window.addEventListener('pageshow', drop('Page shown'), true)\n  window.addEventListener('load', drop('Page loaded'), true)\n  window.document.addEventListener('DOMContentLoaded', drop('DOMContentLoaded'), true)\n  // some browsers like to emit popstate when the page loads, so only add the postate listener after that\n  window.addEventListener('load', () => window.addEventListener('popstate', drop('Navigated back'), true))\n\n  // hashchange has some metaData that we care about\n  window.addEventListener('hashchange', event => {\n    const metaData = event.oldURL\n      ? { from: relativeLocation(event.oldURL), to: relativeLocation(event.newURL), state: window.history.state }\n      : { to: relativeLocation(window.location.href) }\n    client.leaveBreadcrumb('Hash changed', metaData, 'navigation')\n  }, true)\n\n  // the only way to know about replaceState/pushState is to wrap them… >_<\n\n  if (window.history.replaceState) wrapHistoryFn(client, window.history, 'replaceState')\n  if (window.history.pushState) wrapHistoryFn(client, window.history, 'pushState')\n\n  client.leaveBreadcrumb('Bugsnag loaded', {}, 'navigation')\n}\n\nexports.configSchema = {\n  navigationBreadcrumbsEnabled: {\n    defaultValue: () => undefined,\n    validate: (value) => value === true || value === false || value === undefined,\n    message: '(boolean) navigationBreadcrumbsEnabled should be true or false'\n  }\n}\n\nif (\"production\" !== 'production') {\n  exports.destroy = () => {\n    window.history.replaceState._restore()\n    window.history.pushState._restore()\n  }\n}\n\n// takes a full url like http://foo.com:1234/pages/01.html?yes=no#section-2 and returns\n// just the path and hash parts, e.g. /pages/01.html?yes=no#section-2\nconst relativeLocation = url => {\n  const a = document.createElement('A')\n  a.href = url\n  return `${a.pathname}${a.search}${a.hash}`\n}\n\nconst stateChangeToMetaData = (state, title, url) => {\n  const currentPath = relativeLocation(window.location.href)\n  return { title, state, prevState: window.history.state, to: url || currentPath, from: currentPath }\n}\n\nconst wrapHistoryFn = (client, target, fn) => {\n  const orig = target[fn]\n  target[fn] = (state, title, url) => {\n    client.leaveBreadcrumb(`History ${fn}`, stateChangeToMetaData(state, title, url), 'navigation')\n    // if throttle plugin is in use, refresh the event sent count\n    if (typeof client.refresh === 'function') client.refresh()\n    // if the client is operating in session-mode, a new route should trigger a new session\n    if (client.session) client.startSession()\n    orig.call(target, state, title, url)\n  }\n  target[fn]._restore = () => { target[fn] = orig }\n}\n","/*\n * Sets the report request: { url } to be the current href\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift(report => {\n      if (report.request && report.request.url) return\n      report.request = { ...report.request, url: window.location.href }\n    })\n  }\n}\n","const { map, isArray, includes } = require('../../base/lib/es-utils')\nconst inferReleaseStage = require('../../base/lib/infer-release-stage')\n\nmodule.exports = {\n  init: client => client.sessionDelegate(sessionDelegate)\n}\n\nconst sessionDelegate = {\n  startSession: client => {\n    const sessionClient = client\n    sessionClient.session = new client.BugsnagSession()\n\n    map(sessionClient.beforeSession, (fn) => fn(sessionClient))\n\n    const releaseStage = inferReleaseStage(sessionClient)\n\n    // exit early if the reports should not be sent on the current releaseStage\n    if (isArray(sessionClient.config.notifyReleaseStages) && !includes(sessionClient.config.notifyReleaseStages, releaseStage)) {\n      sessionClient._logger.warn(`Session not sent due to releaseStage/notifyReleaseStages configuration`)\n      return sessionClient\n    }\n\n    sessionClient._transport.sendSession(\n      sessionClient._logger,\n      sessionClient.config,\n      {\n        notifier: sessionClient.notifier,\n        device: sessionClient.device,\n        app: { ...{ releaseStage }, ...sessionClient.app },\n        sessions: [\n          {\n            id: sessionClient.session.id,\n            startedAt: sessionClient.session.startedAt,\n            user: sessionClient.user\n          }\n        ]\n      }\n    )\n\n    return sessionClient\n  }\n}\n","/*\n * Remove query strings (and fragments) from stacktraces\n */\nconst { map } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.push(report => {\n      report.stacktrace = map(report.stacktrace, frame => ({ ...frame, file: strip(frame.file) }))\n    })\n  }\n}\n\nconst strip = module.exports._strip = str =>\n  typeof str === 'string'\n    ? str.replace(/\\?.*$/, '').replace(/#.*$/, '')\n    : str\n","const ErrorStackParser = require('error-stack-parser')\nconst hasStack = require('../../base/lib/has-stack')\nconst { reduce } = require('../../base/lib/es-utils')\nconst isError = require('iserror')\n\n/*\n * Automatically notifies Bugsnag when window.onunhandledrejection is called\n */\nlet _listener\nexports.init = (client) => {\n  const listener = event => {\n    let error = event.reason\n    let isBluebird = false\n\n    if (event.detail && event.detail.reason) {\n      error = event.detail.reason\n      isBluebird = true\n    }\n\n    const handledState = {\n      severity: 'error',\n      unhandled: true,\n      severityReason: { type: 'unhandledPromiseRejection' }\n    }\n\n    let report\n    if (error && hasStack(error)) {\n      // if it quacks like an Error…\n      report = new client.BugsnagReport(error.name, error.message, ErrorStackParser.parse(error), handledState)\n      if (isBluebird) {\n        report.stacktrace = reduce(report.stacktrace, fixBluebirdStacktrace(error), [])\n      }\n    } else {\n      // if it doesn't…\n      const msg = 'Rejection reason was not an Error. See \"Promise\" tab for more detail.'\n      report = new client.BugsnagReport(\n        error && error.name ? error.name : 'UnhandledRejection',\n        error && error.message ? error.message : msg,\n        [],\n        handledState\n      )\n      // stuff the rejection reason into metaData, it could be useful\n      report.updateMetaData('promise', 'rejection reason', serializableReason(error))\n    }\n\n    client.notify(report)\n  }\n  if ('addEventListener' in window) {\n    window.addEventListener('unhandledrejection', listener)\n  } else {\n    window.onunhandledrejection = (reason, promise) => {\n      listener({ detail: { reason, promise } })\n    }\n  }\n  _listener = listener\n}\n\nif (\"production\" !== 'production') {\n  exports.destroy = () => {\n    if (_listener) {\n      if ('addEventListener' in window) {\n        window.removeEventListener('unhandledrejection', _listener)\n      } else {\n        window.onunhandledrejection = null\n      }\n    }\n    _listener = null\n  }\n}\n\nconst serializableReason = (err) => {\n  if (err === null || err === undefined) {\n    return 'undefined (or null)'\n  } else if (isError(err)) {\n    return {\n      [Object.prototype.toString.call(err)]: {\n        name: err.name,\n        message: err.message,\n        code: err.code,\n        stack: err.stack\n      }\n    }\n  } else {\n    return err\n  }\n}\n\n// The stack parser on bluebird stacks in FF get a suprious first frame:\n//\n// Error: derp\n//   b@http://localhost:5000/bluebird.html:22:24\n//   a@http://localhost:5000/bluebird.html:18:9\n//   @http://localhost:5000/bluebird.html:14:9\n//\n// results in\n//   […]\n//     0: Object { file: \"Error: derp\", method: undefined, lineNumber: undefined, … }\n//     1: Object { file: \"http://localhost:5000/bluebird.html\", method: \"b\", lineNumber: 22, … }\n//     2: Object { file: \"http://localhost:5000/bluebird.html\", method: \"a\", lineNumber: 18, … }\n//     3: Object { file: \"http://localhost:5000/bluebird.html\", lineNumber: 14, columnNumber: 9, … }\n//\n// so the following reduce/accumulator function removes such frames\n//\n// Bluebird pads method names with spaces so trim that too…\n// https://github.com/petkaantonov/bluebird/blob/b7f21399816d02f979fe434585334ce901dcaf44/src/debuggability.js#L568-L571\nconst fixBluebirdStacktrace = (error) => (accum, frame) => {\n  if (frame.file === error.toString()) return accum\n  if (frame.method) {\n    frame.method = frame.method.replace(/^\\s+/, '')\n  }\n  return accum.concat(frame)\n}\n","/*\n * Automatically notifies Bugsnag when window.onerror is called\n */\n\nmodule.exports = {\n  init: (client) => {\n    const onerror = (messageOrEvent, url, lineNo, charNo, error) => {\n      // Ignore errors with no info due to CORS settings\n      if (lineNo === 0 && /Script error\\.?/.test(messageOrEvent)) {\n        client._logger.warn('Ignoring cross-domain or eval script error. See https://docs.bugsnag.com/platforms/browsers/faq/#3-cross-origin-script-errors')\n        return\n      }\n\n      // any error sent to window.onerror is unhandled and has severity=error\n      const handledState = { severity: 'error', unhandled: true, severityReason: { type: 'unhandledException' } }\n\n      let report\n      if (error) {\n        if (error.name && error.message) {\n          report = new client.BugsnagReport(error.name, error.message, decorateStack(client.BugsnagReport.getStacktrace(error), url, lineNo, charNo), handledState)\n        } else {\n          report = new client.BugsnagReport('window.onerror', String(error), decorateStack(client.BugsnagReport.getStacktrace(error, 1), url, lineNo, charNo), handledState)\n          report.updateMetaData('window onerror', { error })\n        }\n      } else if ((typeof messageOrEvent === 'object' && messageOrEvent !== null) && !url && !lineNo && !charNo && !error) {\n        const name = messageOrEvent.type ? `Event: ${messageOrEvent.type}` : 'window.onerror'\n        const message = messageOrEvent.message || messageOrEvent.detail || ''\n        report = new client.BugsnagReport(name, message, client.BugsnagReport.getStacktrace(new Error(), 1).slice(1), handledState)\n        report.updateMetaData('window onerror', { event: messageOrEvent })\n      } else {\n        report = new client.BugsnagReport('window.onerror', String(messageOrEvent), decorateStack(client.BugsnagReport.getStacktrace(error, 1), url, lineNo, charNo), handledState)\n        report.updateMetaData('window onerror', { event: messageOrEvent })\n      }\n\n      client.notify(report)\n\n      if (typeof prevOnError === 'function') prevOnError(messageOrEvent, url, lineNo, charNo, error)\n    }\n\n    const prevOnError = window.onerror\n    window.onerror = onerror\n  }\n}\n\nconst decorateStack = (stack, url, lineNo, charNo) => {\n  const culprit = stack[0]\n  if (!culprit) return stack\n  if (!culprit.fileName) culprit.setFileName(url)\n  if (!culprit.lineNumber) culprit.setLineNumber(lineNo)\n  if (!culprit.columnNumber) {\n    if (charNo !== undefined) {\n      culprit.setColumnNumber(charNo)\n    } else if (window.event && window.event.errorCharacter) {\n      culprit.setColumnNumber(window.event && window.event.errorCharacter)\n    }\n  }\n  return stack\n}\n","const jsonStringify = require('fast-safe-stringify')\n\nmodule.exports = report => {\n  let payload = jsonStringify(report)\n  if (payload.length > 10e5) {\n    delete report.events[0].metaData\n    report.events[0].metaData = {\n      notifier:\n`WARNING!\nThe serialized payload was ${payload.length / 10e5}MB. The limit is 1MB.\nreport.metaData was stripped to make the payload of a deliverable size.`\n    }\n    payload = jsonStringify(report)\n    if (payload.length > 10e5) throw new Error('payload exceeded 1MB limit')\n  }\n  return payload\n}\n","const makePayload = require('./lib/payload')\nconst jsonStringify = require('fast-safe-stringify')\nconst { isoDate } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  name: 'XDomainRequest',\n  sendReport: (logger, config, report, cb = () => {}) => {\n    const url = `${matchPageProtocol(config.endpoint, window.location.protocol)}?apiKey=${encodeURIComponent(config.apiKey)}&payloadVersion=4.0&sentAt=${encodeURIComponent(isoDate())}`\n    const req = new window.XDomainRequest()\n    req.onload = function () {\n      cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    setTimeout(() => {\n      try {\n        req.send(makePayload(report))\n      } catch (e) {\n        logger.error(e)\n      }\n    }, 0)\n  },\n  sendSession: (logger, config, session, cb = () => {}) => {\n    const url = `${matchPageProtocol(config.sessionEndpoint, window.location.protocol)}?apiKey=${encodeURIComponent(config.apiKey)}&payloadVersion=1.0&sentAt=${encodeURIComponent(isoDate())}`\n    const req = new window.XDomainRequest()\n    req.onload = function () {\n      cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    setTimeout(() => {\n      try {\n        req.send(jsonStringify(session))\n      } catch (e) {\n        logger.error(e)\n      }\n    }, 0)\n  }\n}\n\nconst matchPageProtocol = module.exports._matchPageProtocol = (endpoint, pageProtocol) =>\n  pageProtocol === 'http:'\n    ? endpoint.replace(/^https:/, 'http:')\n    : endpoint\n","const makePayload = require('./lib/payload')\nconst jsonStringify = require('fast-safe-stringify')\nconst { isoDate } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  name: 'XMLHttpRequest',\n  sendReport: (logger, config, report, cb = () => {}) => {\n    const url = config.endpoint\n    const req = new window.XMLHttpRequest()\n    req.onreadystatechange = function () {\n      if (req.readyState === window.XMLHttpRequest.DONE) cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    req.setRequestHeader('Content-Type', 'application/json')\n    req.setRequestHeader('Bugsnag-Api-Key', report.apiKey || config.apiKey)\n    req.setRequestHeader('Bugsnag-Payload-Version', '4.0')\n    req.setRequestHeader('Bugsnag-Sent-At', isoDate())\n    try {\n      req.send(makePayload(report))\n    } catch (e) {\n      logger.error(e)\n    }\n  },\n  sendSession: (logger, config, session, cb = () => {}) => {\n    const url = config.sessionEndpoint\n    const req = new window.XMLHttpRequest()\n    req.onreadystatechange = function () {\n      if (req.readyState === window.XMLHttpRequest.DONE) cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    req.setRequestHeader('Content-Type', 'application/json')\n    req.setRequestHeader('Bugsnag-Api-Key', config.apiKey)\n    req.setRequestHeader('Bugsnag-Payload-Version', '1.0')\n    req.setRequestHeader('Bugsnag-Sent-At', isoDate())\n    try {\n      req.send(jsonStringify(session))\n    } catch (e) {\n      logger.error(e)\n    }\n  }\n}\n","const name = 'Bugsnag JavaScript'\nconst version = '4.4.0'\nconst url = 'https://github.com/bugsnag/bugsnag-js'\n\nconst Client = require('../base/client')\nconst Report = require('../base/report')\nconst Session = require('../base/session')\nconst Breadcrumb = require('../base/breadcrumb')\nconst { map, reduce } = require('../base/lib/es-utils')\n\n// extend the base config schema with some browser-specific options\nconst schema = { ...require('../base/config').schema, ...require('./config') }\n\nconst pluginWindowOnerror = require('./plugins/window-onerror')\nconst pluginUnhandledRejection = require('./plugins/unhandled-rejection')\nconst pluginDevice = require('./plugins/device')\nconst pluginContext = require('./plugins/context')\nconst pluginRequest = require('./plugins/request')\nconst pluginThrottle = require('../base/plugins/throttle')\nconst pluginConsoleBreadcrumbs = require('./plugins/console-breadcrumbs')\nconst pluginNetworkBreadcrumbs = require('./plugins/network-breadcrumbs')\nconst pluginNavigationBreadcrumbs = require('./plugins/navigation-breadcrumbs')\nconst pluginInteractionBreadcrumbs = require('./plugins/interaction-breadcrumbs')\nconst pluginInlineScriptContent = require('./plugins/inline-script-content')\nconst pluginSessions = require('./plugins/sessions')\nconst pluginIp = require('./plugins/ip')\nconst pluginStripQueryString = require('./plugins/strip-query-string')\n\nconst plugins = [\n  pluginWindowOnerror,\n  pluginUnhandledRejection,\n  pluginDevice,\n  pluginContext,\n  pluginRequest,\n  pluginThrottle,\n  pluginConsoleBreadcrumbs,\n  pluginNetworkBreadcrumbs,\n  pluginNavigationBreadcrumbs,\n  pluginInteractionBreadcrumbs,\n  pluginInlineScriptContent,\n  pluginSessions,\n  pluginIp,\n  pluginStripQueryString\n]\n\nconst transports = {\n  'XDomainRequest': require('./transports/x-domain-request'),\n  'XMLHttpRequest': require('./transports/xml-http-request')\n}\n\nmodule.exports = (opts, userPlugins = []) => {\n  // handle very simple use case where user supplies just the api key as a string\n  if (typeof opts === 'string') opts = { apiKey: opts }\n\n  // support renamed option\n  if (opts.sessionTrackingEnabled) {\n    opts.autoCaptureSessions = opts.sessionTrackingEnabled\n  }\n\n  // allow plugins to augment the schema with their own options\n  const finalSchema = reduce([].concat(plugins).concat(userPlugins), (accum, plugin) => {\n    if (!plugin.configSchema) return accum\n    return { ...accum, ...plugin.configSchema }\n  }, schema)\n\n  const bugsnag = new Client({ name, version, url }, finalSchema)\n\n  // set transport based on browser capability (IE 8+9 have an XDomainRequest object)\n  bugsnag.transport(window.XDomainRequest ? transports.XDomainRequest : transports.XMLHttpRequest)\n\n  // set logger based on browser capability\n  if (typeof console !== 'undefined' && typeof console.debug === 'function') {\n    const logger = getPrefixedConsole()\n    bugsnag.logger(logger)\n  }\n\n  try {\n    // configure with user supplied options\n    // errors can be thrown here that prevent the lib from being in a useable state\n    bugsnag.configure(opts)\n  } catch (e) {\n    bugsnag._logger.warn(e)\n    if (e.errors) map(e.errors, bugsnag._logger.warn)\n    // rethrow. if there was an error with configuration\n    // the library is not going to work\n    throw e\n  }\n\n  // always-on browser-specific plugins\n  bugsnag.use(pluginDevice)\n  bugsnag.use(pluginContext)\n  bugsnag.use(pluginRequest)\n  bugsnag.use(pluginInlineScriptContent)\n  bugsnag.use(pluginThrottle)\n  bugsnag.use(pluginSessions)\n  bugsnag.use(pluginIp)\n  bugsnag.use(pluginStripQueryString)\n\n  // optional browser-specific plugins\n\n  if (bugsnag.config.autoNotify !== false) {\n    bugsnag.use(pluginWindowOnerror)\n    bugsnag.use(pluginUnhandledRejection)\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'navigationBreadcrumbsEnabled')) {\n    bugsnag.use(pluginNavigationBreadcrumbs)\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'interactionBreadcrumbsEnabled')) {\n    bugsnag.use(pluginInteractionBreadcrumbs)\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'networkBreadcrumbsEnabled')) {\n    bugsnag.use(pluginNetworkBreadcrumbs)\n  }\n\n  // because console breadcrumbs play havoc with line numbers,\n  // if not explicitly enabled, only setup on non-development evironments\n  if (inferBreadcrumbSetting(bugsnag.config, 'consoleBreadcrumbsEnabled', false)) {\n    bugsnag.use(pluginConsoleBreadcrumbs)\n  }\n\n  // init user supplied plugins\n  map(userPlugins, (plugin) => bugsnag.use(plugin))\n\n  return bugsnag.config.autoCaptureSessions\n    ? bugsnag.startSession()\n    : bugsnag\n}\n\nconst getPrefixedConsole = () => {\n  const logger = {}\n  const consoleLog = console['log']\n  map([ 'debug', 'info', 'warn', 'error' ], (method) => {\n    const consoleMethod = console[method]\n    logger[method] = typeof consoleMethod === 'function'\n      ? consoleMethod.bind(console, '[bugsnag]')\n      : consoleLog.bind(console, '[bugsnag]')\n  })\n  return logger\n}\n\nconst inferBreadcrumbSetting = (config, val, defaultInDev = true) =>\n  typeof config[val] === 'boolean'\n    ? config[val]\n    : (config.autoBreadcrumbs &&\n        (defaultInDev || !/^dev(elopment)?$/.test(config.releaseStage))\n      )\n\n// Stub this value because this is what the type interface looks like\n// (types/bugsnag.d.ts). This is only an issue in Angular's development\n// mode as its TS/DI thingy attempts to use this value at runtime.\n// In most other situations, TS only uses the types at compile time.\nmodule.exports.Bugsnag = {\n  Client,\n  Report,\n  Session,\n  Breadcrumb\n}\n\n// Export a \"default\" property for compatibility with ESM imports\nmodule.exports['default'] = module.exports\n","\nreturn _$browser_12;\n\n});"]}